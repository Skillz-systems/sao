{"remainingRequest":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/babel-loader/lib/index.js!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/InvoicingAndPayments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/InvoicingAndPayments.vue","mtime":1669925487880},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["InvoicingAndPayments.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <b-row>\r\n      <b-col lg=\"12\">\r\n        <b-card no-body>\r\n          Invoicing page\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ValidationProvider, ValidationObserver } from \"vee-validate\";\r\nimport { required } from \"@validations\";\r\nimport vSelect from \"vue-select\";\r\nimport VueGoogleAutocomplete from \"vue-google-autocomplete\";\r\nimport VueNumericInput from \"vue-numeric-input\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  components: {\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n    vSelect,\r\n    VueGoogleAutocomplete,\r\n    VueNumericInput,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      misceMessage: null,\r\n      showAddAnotherLocationBtn: false,\r\n      showLocationInputFields: true,\r\n      id: 0,\r\n      installationLocationsObject: new Map(),\r\n      installationAddress: \"\",\r\n      installationLocations: [],\r\n      message: \"\",\r\n      selected: \"false\",\r\n      locationCountAboveOne: false,\r\n      isAddingLocation: false,\r\n      isLoading: false,\r\n      client: null,\r\n      product: null,\r\n      projectName: null,\r\n      fullAddress: null,\r\n      projectType: null,\r\n      systemModel: null,\r\n      systemSize: 0,\r\n      installationType: null,\r\n      selectionMode: null,\r\n      category: null,\r\n      subCategory: null,\r\n      price: null,\r\n      numBatteries: 1,\r\n      numPanels: 1,\r\n      status: null,\r\n      location: null,\r\n      state: null,\r\n      lga: null,\r\n      productDiscount: null,\r\n      description: null,\r\n      showSingleSelectionCont: false,\r\n      showProductSalesCont: false,\r\n      accessoryType: [],\r\n      accessory: null,\r\n      categories: [],\r\n      subCategories: [],\r\n      allMiscellaneous: [],\r\n      createdMiscellaneous: [],\r\n      miscellaneous: null,\r\n      miscellanousAmount: null,\r\n      clients: [{ value: null, title: \"select a client\" }],\r\n      products: [{ value: null, title: \"select a product\", id: null }],\r\n      projectTypes: [{ value: null, title: \"select a project type\" }],\r\n      systemModels: [\r\n        { value: null, text: \"Please select a solar system model\" },\r\n        { value: 1, text: \"BES-1\" },\r\n        { value: 2, text: \"BES-3\" },\r\n        { value: 3, text: \"BES-5\" },\r\n        { value: 4, text: \"BES-8\" },\r\n      ],\r\n      systemSizes: [\r\n        { value: null, text: \"Please select a solar system size\" },\r\n        { value: \"1 - 2 kW\", text: \"1 - 2 kW\" },\r\n        { value: \"3.0 kW\", text: \"3.0 kW\" },\r\n        { value: \"4.0 kW\", text: \"4.0 kW\" },\r\n        { value: \"5.0 kW\", text: \"5.0 kW\" },\r\n        { value: \"5 - 10 kW\", text: \"5 - 10 kW\" },\r\n        { value: \"10 + kW\", text: \"10 + kW\" },\r\n      ],\r\n      selectionModes: [\r\n        { value: null, title: \"select product mode\" },\r\n        { value: \"ProductSales\", title: \"Product Sales\" },\r\n        { value: \"SingleStockSales\", title: \"Single Stock Sales\" },\r\n      ],\r\n      installationTypes: [\r\n        { value: null, title: \"select an installation type\" },\r\n        { value: \"Rooftop\", title: \"Rooftop\" },\r\n        { value: \"Groundmount\", title: \"Groundmount\" },\r\n      ],\r\n      statusOptions: [{ value: null, title: \"select a project status\" }],\r\n      locations: [{ value: null, text: \"Please select a location\" }],\r\n      states: [{ value: null, title: \"Please select a state\" }],\r\n      address: [{ value: null, text: \"Please select an address\" }],\r\n      lgas: [{ value: null, title: \"Please select an lga\" }],\r\n      batteryType: null,\r\n      batteryQuantity: 1,\r\n      batteryTypes: [{ value: null, title: \"Please select a battery type\" }],\r\n      inverterType: null,\r\n      inverterQuantity: 1,\r\n      inverterTypes: [{ value: null, title: \"Please select an inverter type\" }],\r\n      solarPanelType: null,\r\n      solarPanelQuantity: 1,\r\n      solarPanelTypes: [\r\n        { value: null, title: \"Please select a solar panel type\" },\r\n      ],\r\n      miscellaneousField: [\r\n        { key: \"miscellaneous_id\", label: \"Name\" },\r\n        { key: \"amount\", label: \"amount\" },\r\n        { key: \"title\", label: \"title\" },\r\n      ],\r\n\r\n      required,\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    price(newValue) {\r\n      const result = newValue\r\n        .replace(/\\D/g, \"\")\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n      // eslint-disable-next-line no-return-assign\r\n      this.$nextTick(() => (this.price = result));\r\n    },\r\n  },\r\n  mounted() {\r\n    document.getElementById(\"custom-breadcrumb\").innerHTML =\r\n      'Projects / <span style=\"color: #C4C4C4\">Add Project</span>';\r\n    this.$refs.address.focus();\r\n    this.getSubItemsMis(6);\r\n    this.getMiscellaneous();\r\n  },\r\n  beforeDestroy() {\r\n    localStorage.removeItem(\"products\");\r\n  },\r\n  created() {\r\n    this.getClients();\r\n    this.getProjectTypes();\r\n    this.getStatusOptions();\r\n    this.getProducts();\r\n    this.getSubItems();\r\n    this.getStates();\r\n    this.getItems();\r\n    this.getSubItemsMis(6);\r\n    this.getMiscellaneous();\r\n  },\r\n  methods: {\r\n    deleteMiscellaneous(index) {\r\n      this.createdMiscellaneous.splice(index, 1);\r\n    },\r\n    addMiscellaneous() {\r\n      console.log(this.allMiscellaneous, \"djdsjsjks\");\r\n\r\n      this.misceMessage = \"\";\r\n      if (!this.miscellaneous || !this.miscellanousAmount) {\r\n        this.misceMessage = \"Select Options\";\r\n        return;\r\n      }\r\n      const miscellan = this.allMiscellaneous.filter(\r\n        (e) => e.value == this.miscellaneous\r\n      );\r\n      this.createdMiscellaneous.push({\r\n        miscellaneous_id: this.miscellaneous,\r\n        amount: this.miscellanousAmount,\r\n        title: miscellan[0].text,\r\n      });\r\n    },\r\n    miscellaneousSelectChange(e, ki) {\r\n      console.log(e, ki, \"sjsdjkdjs\");\r\n    },\r\n    getMiscellaneous() {\r\n      const token = localStorage.getItem(\"token\");\r\n      axios.defaults.headers.Authorization = `Bearer ${token}`;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"title\", this.miscellaneous);\r\n\r\n      axios\r\n        .get(`${process.env.VUE_APP_BASE_URL}/mis`)\r\n        .then((response) => {\r\n          const { data } = response.data;\r\n          const output = [];\r\n          data.map((subItem) => {\r\n            const allMiscellaneous = { value: subItem.id, text: subItem.title };\r\n            output.push(allMiscellaneous);\r\n          });\r\n          this.allMiscellaneous = output;\r\n        })\r\n        .catch((err) => {\r\n          alert(err.response.data?.message);\r\n          this.message = err.response.data?.message;\r\n          console.log(err);\r\n        });\r\n    },\r\n    removeLocation(id) {\r\n      this.installationLocationsObject = this.installationLocationsObject.filter(\r\n        (location) => location.id !== id\r\n      );\r\n    },\r\n    getSubItemsMis(item) {\r\n      const itemID = item;\r\n      this.$store\r\n        .dispatch(\"inventory/getSubItemByID\", { itemID })\r\n        .then((res) => {\r\n          console.log(res, \"jsjksk\");\r\n          const { data } = res.data;\r\n\r\n          if (item === 2) {\r\n            data.forEach((subItem) => {\r\n              const systemSize = { value: subItem.id, text: subItem.name };\r\n              this.systemSizes.push(systemSize);\r\n            });\r\n          } else if (item === 1) {\r\n            data.forEach((subItem) => {\r\n              const inverterType = { value: subItem.id, text: subItem.name };\r\n              this.inverterTypes.push(inverterType);\r\n            });\r\n          } else if (item === 6) {\r\n            data.forEach((subItem) => {\r\n              const accessoryType = { value: subItem.id, text: subItem.name };\r\n              this.accessoryType.push(accessoryType);\r\n            });\r\n          } else {\r\n            data.forEach((subItem) => {\r\n              const batteryType = { value: subItem.id, text: subItem.name };\r\n              this.batteryTypes.push(batteryType);\r\n            });\r\n          }\r\n        });\r\n    },\r\n    getItems() {\r\n      this.$store.dispatch(\"inventory/getItems\").then((res) => {\r\n        this.loaded = true;\r\n        const { data } = res.data;\r\n        console.log(data, \"sksjkskkjsd\");\r\n        // this.categories = data\r\n        data.forEach((item) => {\r\n          const itemObj = { value: item.id, title: item.item };\r\n          this.categories.push(itemObj);\r\n        });\r\n      });\r\n    },\r\n    getSubItemsSelected(item) {\r\n      console.log(item, \"dkkklslklks\");\r\n      this.subLoaded = false;\r\n      this.currentItem = item;\r\n      const itemID = item;\r\n      this.$store\r\n        .dispatch(\"inventory/getSubItemByID\", { itemID })\r\n        .then((res) => {\r\n          this.subLoaded = true;\r\n          const { data } = res.data;\r\n\r\n          console.log(data, \"resonsellle\");\r\n          // this.subItems = data;\r\n          this.subCategories = [];\r\n          data.forEach((item) => {\r\n            const itemObj = { value: item.id, title: item.name };\r\n            this.subCategories.push(itemObj);\r\n          });\r\n          this.totalRows = data.length;\r\n        });\r\n    },\r\n    onLanguageChange(selection) {\r\n      console.log(\"new lang\", selection);\r\n      if (selection === \"ProductSales\") {\r\n        this.showProductSalesCont = true;\r\n        this.showSingleSelectionCont = false;\r\n      } else {\r\n        this.showSingleSelectionCont = true;\r\n        this.showProductSalesCont = false;\r\n      }\r\n    },\r\n    onCategoryChange(item) {\r\n      console.log(item, \"sskjdsjsjdkjskkjsj\");\r\n      this.getSubItemsSelected(item);\r\n    },\r\n    onsubCategoryChange(item) {\r\n      console.log(item, \"itemmmmm\");\r\n    },\r\n\r\n    /**\r\n     * When the location found\r\n     * @param {Object} addressData Data of the found location\r\n     * @param {Object} placeResultData PlaceResult object\r\n     * @param {String} id Input container ID\r\n     */\r\n    getAddressData(addressData, placeResultData, id) {\r\n      console.log(\"changed\");\r\n      const addressLat = {\r\n        lat: addressData.latitude,\r\n        long: addressData.longitude,\r\n        country: addressData.country,\r\n        route: addressData.route,\r\n        locality: addressData.locality,\r\n      };\r\n      this.installationAddress = addressLat;\r\n      console.log(addressData, placeResultData, id);\r\n    },\r\n\r\n    addLocation() {\r\n      this.isAddingLocation = true;\r\n      this.message = \"\";\r\n\r\n      if (\r\n        this.state === \"\" ||\r\n        this.lga === \"\" ||\r\n        this.installationAddress === \"\"\r\n      ) {\r\n        this.message = \"fill all address fields\";\r\n      } else {\r\n        const currentLocation = {\r\n          id: this.id + 1,\r\n          log: this.installationAddress.long,\r\n          lat: this.installationAddress.lat,\r\n          installationAddress: this.installationAddress,\r\n          states_id: this.state,\r\n          lgas_id: this.lga,\r\n          address: this.fullAddress,\r\n        };\r\n        this.id += 1;\r\n        console.log(currentLocation, \"currentLocation\");\r\n        this.installationLocations = this.installationLocations.concat(\r\n          currentLocation\r\n        );\r\n        this.installationLocationsObject = this.installationLocations;\r\n        this.installationAddress = \"\";\r\n        this.state = \"\";\r\n        this.lga = \"\";\r\n      }\r\n\r\n      this.isAddingLocation = false;\r\n      this.showLocationInputFields = false;\r\n      this.selected = \"false\";\r\n      this.showAddAnotherLocationBtn = true;\r\n    },\r\n\r\n    showAddressField() {\r\n      this.showLocationInputFields = true;\r\n      this.showAddAnotherLocationBtn = false;\r\n      this.selected = \"true\";\r\n      this.fullAddress = \"\";\r\n      this.isAddingLocation = false;\r\n    },\r\n\r\n    addProject() {\r\n      this.isLoading = true;\r\n      let clientAddress;\r\n\r\n      console.log(this.installationLocationsObject, \"dsjjs\");\r\n      if (Object.keys(this.installationLocationsObject).length !== 0) {\r\n        console.log(\"yes\");\r\n        clientAddress = this.installationLocationsObject;\r\n      } else {\r\n        console.log(\"no\");\r\n        clientAddress = [\r\n          {\r\n            log: this.installationAddress.long,\r\n            lat: this.installationAddress.lat,\r\n            states_id: this.state,\r\n            lgas_id: this.lga,\r\n            address: this.fullAddress,\r\n          },\r\n        ];\r\n      }\r\n\r\n      this.$refs.addProjectValidation.validate().then((success) => {\r\n        if (success) {\r\n          const form = {\r\n            address: JSON.stringify(clientAddress),\r\n            projectName: this.projectName,\r\n            projectType: this.projectType,\r\n            systemSize: this.systemSize,\r\n            solarPanelQuantity: this.solarPanelQuantity,\r\n            batteryQuantity: this.batteryQuantity,\r\n            description: this.description,\r\n            installationType: this.installationType,\r\n\r\n            status: this.status,\r\n            client: this.client,\r\n            lga: this.lga,\r\n            product: this.product,\r\n            price: parseFloat(this.price.replace(/,/g, \"\")),\r\n            inverterQuantity: this.inverterQuantity,\r\n            solarPanelType: this.solarPanelType,\r\n            inverterType: this.inverterType,\r\n            batteryType: this.batteryType,\r\n            discount: this.productDiscount,\r\n            miscellaneous: JSON.stringify(this.createdMiscellaneous),\r\n          };\r\n          this.$store\r\n            .dispatch(\"project/addProject\", { form })\r\n            .then((res) => {\r\n              this.isLoading = false;\r\n              const { message } = res.data;\r\n              this.$router.push(\"/projects\").then(() => {\r\n                this.toast(\r\n                  \"Add Project\",\r\n                  \"CheckCircleIcon\",\r\n                  message,\r\n                  \"success\"\r\n                );\r\n              });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              this.isLoading = false;\r\n              this.toast(\r\n                \"Add Project\",\r\n                \"SlashIcon\",\r\n                err.response.data.message,\r\n                \"danger\"\r\n              );\r\n            });\r\n        } else {\r\n          this.isLoading = false;\r\n          this.toast(\r\n            \"Add Project Attempt\",\r\n            \"AlertTriangleIcon\",\r\n            \"You must fill in all required fields\",\r\n            \"warning\"\r\n          );\r\n        }\r\n      });\r\n    },\r\n    getClients() {\r\n      this.$store.dispatch(\"client/getClients\").then((res) => {\r\n        const { data } = res.data;\r\n        data.forEach((client) => {\r\n          const clientobj = { value: client.id, title: client.clientname };\r\n          this.clients.push(clientobj);\r\n        });\r\n      });\r\n    },\r\n    getClient() {\r\n      const clientID = this.client;\r\n      this.$store.dispatch(\"client/getClientByID\", { clientID }).then((res) => {\r\n        const { data } = res.data;\r\n        this.state = data.stateid;\r\n        const stateID = this.state;\r\n        this.lgas = [{ value: null, title: \"Please select an lga\" }];\r\n        this.$store\r\n          .dispatch(\"client/getLGAsByStateID\", { stateID })\r\n          .then((innerRes) => {\r\n            const innerData = innerRes.data.data;\r\n            innerData.forEach((lga) => {\r\n              const lgaobj = { value: lga.lgaid, title: lga.lganame };\r\n              this.lgas.push(lgaobj);\r\n              this.lga = data.lgaid;\r\n            });\r\n          });\r\n      });\r\n    },\r\n    getProjectTypes() {\r\n      this.$store.dispatch(\"project/getProjectTypes\").then((res) => {\r\n        const { data } = res.data;\r\n        data.forEach((type) => {\r\n          const typeobj = { value: type, title: type };\r\n          this.projectTypes.push(typeobj);\r\n        });\r\n      });\r\n    },\r\n    getStatusOptions() {\r\n      this.$store.dispatch(\"project/getProjectStatus\").then((res) => {\r\n        const { data } = res.data;\r\n        data.forEach((status) => {\r\n          const statusobj = { value: status, title: status };\r\n          this.statusOptions.push(statusobj);\r\n        });\r\n      });\r\n    },\r\n    getProducts() {\r\n      this.$store.dispatch(\"product/getProducts\").then((res) => {\r\n        const { data } = res.data;\r\n        console.log(data, \"dsjsjjskjs\");\r\n        localStorage.setItem(\"products\", JSON.stringify(data));\r\n        data.forEach((product) => {\r\n          const productobj = {\r\n            value: product.id,\r\n            title: product.productname,\r\n            id: product.id,\r\n          };\r\n          this.products.push(productobj);\r\n        });\r\n        console.log(this.products, \"sdjksdjks\");\r\n      });\r\n    },\r\n    getStates() {\r\n      this.$store.dispatch(\"client/getStates\").then((res) => {\r\n        const { data } = res.data;\r\n        data.forEach((state) => {\r\n          const stateobj = { value: state.stateid, title: state.sname };\r\n          this.states.push(stateobj);\r\n        });\r\n      });\r\n    },\r\n    getLGAsByStateID() {\r\n      const stateID = this.state;\r\n      this.lgas = [{ value: null, title: \"Please select an lga\" }];\r\n      this.$store\r\n        .dispatch(\"client/getLGAsByStateID\", { stateID })\r\n        .then((res) => {\r\n          const { data } = res.data;\r\n          data.forEach((lga) => {\r\n            const lgaobj = { value: lga.lgaid, title: lga.lganame };\r\n            this.lgas.push(lgaobj);\r\n          });\r\n        });\r\n    },\r\n    getBatteriesAndPanels() {\r\n      const products = JSON.parse(localStorage.getItem(\"products\"));\r\n      products.every((product) => {\r\n        if (product.id === this.product) {\r\n          this.numBatteries = product.numberofbatteries;\r\n          this.numPanels = product.numberofpanels;\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    },\r\n    getProduct() {\r\n      const products = JSON.parse(localStorage.getItem(\"products\"));\r\n      console.log(products, \"sdjksjsk\");\r\n      products.every((product) => {\r\n        console.log(product, products, \"dsksdskj\");\r\n        if (product.id === this.product) {\r\n          this.price = parseFloat(product.price).toString();\r\n          this.batteryType = product.batteries_type;\r\n          this.batteryQuantity = parseFloat(product.numberofbatteries);\r\n          this.inverterType = product.inverter_type;\r\n          this.inverterQuantity = parseFloat(product.numberofinverters);\r\n          this.solarPanelType = product.panel_type;\r\n          this.solarPanelQuantity = parseFloat(product.numberofpanels);\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    },\r\n    getSubItems() {\r\n      const itemIDs = [1, 2, 3];\r\n      itemIDs.forEach((itemID) => {\r\n        this.$store\r\n          .dispatch(\"inventory/getSubItemByID\", { itemID })\r\n          .then((res) => {\r\n            const { data } = res.data;\r\n            switch (itemID) {\r\n              case 1: // battery\r\n                data.forEach((subItem) => {\r\n                  const batteryType = {\r\n                    value: subItem.id,\r\n                    title: subItem.name,\r\n                  };\r\n                  this.batteryTypes.push(batteryType);\r\n                });\r\n                break;\r\n              case 2: // solar panel\r\n                data.forEach((subItem) => {\r\n                  const solarPanelType = {\r\n                    value: subItem.id,\r\n                    title: subItem.name,\r\n                  };\r\n                  this.solarPanelTypes.push(solarPanelType);\r\n                });\r\n                break;\r\n              default:\r\n                // inverter\r\n                data.forEach((subItem) => {\r\n                  const inverterType = {\r\n                    value: subItem.id,\r\n                    title: subItem.name,\r\n                  };\r\n                  this.inverterTypes.push(inverterType);\r\n                });\r\n            }\r\n          });\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n[dir] .form-control:focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .custom-select:focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .b-form-spinbutton.form-control:focus,\r\n[dir] .b-form-spinbutton.form-control.focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .input-group:not(.bootstrap-touchspin):focus-within .form-control,\r\n[dir] .input-group:not(.bootstrap-touchspin):focus-within .input-group-text {\r\n  border-color: #4D6D8A;\r\n}\r\n.number-input {\r\n  height: 38px;\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n.flex {\r\n  display: flex;\r\n  column-gap: 1rem;\r\n}\r\n@import \"@core/scss/vue/libs/vue-select.scss\";\r\n</style>\r\n"],"sourceRoot":"src/views/projects"}]}