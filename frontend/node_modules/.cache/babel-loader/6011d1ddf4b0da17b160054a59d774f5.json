{"remainingRequest":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/babel-loader/lib/index.js!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/MoreMeshGrids.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/MoreMeshGrids.vue","mtime":1680088796560},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MoreMeshGrids.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- <b-spinner\r\n      v-if=\"!loaded\"\r\n      style=\"width: 3rem; height: 3rem;\"\r\n      variant=\"dark\"\r\n      label=\"Loading...\" type=\"grow\"\r\n      class=\"text-center\"\r\n    />\r\n    <b-row v-if=\"loaded\">\r\n      <b-col lg=\"12\"> -->\r\n \r\n    <div class=\"order-cards\">\r\n      <b-col\r\n        v-for=\"(order, index) in orders.installations\"\r\n        :key=\"index\"\r\n        class=\"mt-1\"\r\n        lg=\"12\"\r\n      >\r\n        <div\r\n          v-for=\"(orderDetails, index) in order.orderdetails.inverter\"\r\n          :key=\"index\"\r\n          class=\"mt-1 order-card\"\r\n        >\r\n          <p>\r\n            <strong class=\"mr-1\">Name:</strong>\r\n            <span>{{ orderDetails.name }}</span>\r\n          </p>\r\n          <p>\r\n            <strong class=\"mr-1\">Price:</strong>\r\n            <span>{{ orderDetails.price }}</span>\r\n          </p>\r\n          <p>\r\n            <strong class=\"mr-1\">Rating:</strong>\r\n            <span>{{ orderDetails.rating }}</span>\r\n          </p>\r\n       \r\n          <b-button\r\n            v-ripple.400=\"'rgba(255, 255, 255, 0.15)'\"\r\n            width=\"30\"\r\n            variant=\"primary\"\r\n            class=\"btn-icon\"\r\n            @click=\"createConnection()\"\r\n          >Create Connection</b-button>\r\n          <b-button @click=\"moreMeshDetails(orderDetails)\">\r\n            View More Details\r\n          </b-button>\r\n        </div>\r\n      </b-col>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\r\nimport { required } from '@validations'\r\nimport vSelect from 'vue-select'\r\n\r\nexport default {\r\n  components: {\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n    vSelect,\r\n  },\r\n  data() {\r\n    return {\r\n      loaded: false,\r\n      isLoading: false,\r\n      client: null,\r\n      product: null,\r\n      projectName: null,\r\n      projectType: null,\r\n      systemModel: null,\r\n      systemSize: null,\r\n      installationType: null,\r\n      price: null,\r\n      numBatteries: 1,\r\n      numPanels: 1,\r\n      status: null,\r\n      location: null,\r\n      state: null,\r\n      orders: [],\r\n      lga: null,\r\n      description: null,\r\n      clients: [\r\n        { value: null, title: 'Please select a client' },\r\n      ],\r\n      products: [\r\n        { value: null, title: 'Please select a product' },\r\n      ],\r\n      projectTypes: [\r\n        { value: null, title: 'Please select a project type' },\r\n      ],\r\n      systemModels: [\r\n        { value: null, text: 'Please select a solar system model' },\r\n        { value: 1, text: 'BES-1' },\r\n        { value: 2, text: 'BES-3' },\r\n        { value: 3, text: 'BES-5' },\r\n        { value: 4, text: 'BES-8' },\r\n      ],\r\n      systemSizes: [\r\n        { value: null, text: 'Please select a solar system size' },\r\n        { value: '1 - 2 kW', text: '1 - 2 kW' },\r\n        { value: '3.0 kW', text: '3.0 kW' },\r\n        { value: '4.0 kW', text: '4.0 kW' },\r\n        { value: '5.0 kW', text: '5.0 kW' },\r\n        { value: '5 - 10 kW', text: '5 - 10 kW' },\r\n        { value: '10 + kW', text: '10 + kW' },\r\n      ],\r\n      installationTypes: [\r\n        { value: null, title: 'Please select an installation type' },\r\n        { value: 'Rooftop', title: 'Rooftop' },\r\n        { value: 'Groundmount', title: 'Groundmount' },\r\n      ],\r\n      statusOptions: [\r\n        { value: null, title: 'Please select a project status' },\r\n      ],\r\n      locations: [\r\n        { value: null, title: 'Please select a location' },\r\n      ],\r\n      states: [\r\n        { value: null, title: 'Please select a state' },\r\n      ],\r\n      lgas: [\r\n        { value: null, title: 'Please select an lga' },\r\n      ],\r\n      batteryType: null,\r\n      batteryQuantity: 1,\r\n      batteryTypes: [\r\n        { value: null, title: 'Please select a battery type' },\r\n      ],\r\n      inverterType: null,\r\n      inverterQuantity: 1,\r\n      inverterTypes: [\r\n        { value: null, title: 'Please select an inverter type' },\r\n      ],\r\n      solarPanelType: null,\r\n      solarPanelQuantity: 1,\r\n      solarPanelTypes: [\r\n        { value: null, title: 'Please select a solar panel type' },\r\n      ],\r\n      required,\r\n    }\r\n  },\r\n  watch: {\r\n    price(newValue) {\r\n      const result = newValue.replace(/\\D/g, '')\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n      // eslint-disable-next-line no-return-assign\r\n      this.$nextTick(() => this.price = result)\r\n    },\r\n  },\r\n\r\n  created() {\r\n    const { order } = this.$route.query\r\n    this.mesh = JSON.parse(order)\r\n    // this.amount = this.paymentData.amount;\r\n    localStorage.setItem('orderorder', order)\r\n  },\r\n  mounted() {\r\n    // document.getElementById('custom-breadcrumb').innerHTML = 'Projects / <span style=\"color: #C4C4C4\">Edit Project</span>'\r\n    const { order } = this.$route.query\r\n    console.log(order, 'kkkkk')\r\n    this.getProject()\r\n  },\r\n  beforeDestroy() {\r\n    // localStorage.removeItem('products')\r\n    // localStorage.removeItem('projectID')\r\n  },\r\n  created() {\r\n    this.getProject()\r\n    this.getClients()\r\n    this.getProjectTypes()\r\n    this.getStatusOptions()\r\n    this.getProducts()\r\n    this.getSubItems()\r\n    this.getStates()\r\n  },\r\n\r\n  methods: {\r\n    getProject() {\r\n      const projectID = localStorage.getItem('projectID')\r\n      this.$store\r\n        .dispatch('project/getProjectByID', { projectID })\r\n        .then(res => {\r\n          const { data } = res.data\r\n\r\n          console.log(data, 'djdsjsks')\r\n\r\n          const allPayments = data.payments.map((value, index) => {\r\n            const serial = index\r\n            return { ...value, serial }\r\n          })\r\n\r\n          // const allConnections = data.payments.map((value, index) => {\r\n          //   const serial = index\r\n          //   return { ...value, serial }\r\n          // })\r\n\r\n          console.log(allPayments, 'allPayments')\r\n          this.allPayments = allPayments\r\n\r\n          const miscellanClone = []\r\n          let serial = 0\r\n          data.installations.map(order => order.orderdetails.accessories.map((accessory, index) => {\r\n          // datum.map(accessory => {\r\n\r\n            const fil = miscellanClone.filter(element => element.name == accessory.name)\r\n            if (fil.length != 0) {\r\n              miscellanClone.forEach(element => {\r\n                if (element.name == accessory.name) {\r\n                  return element.count += 1\r\n                }\r\n              })\r\n            } else {\r\n              const dataIn = {\r\n                name: accessory.name, price: accessory.price, rating: accessory.rating, count: 1, total: '', serial: serial += 1,\r\n              }\r\n              miscellanClone.push(dataIn)\r\n            }\r\n          }))\r\n          this.miscellanClone = miscellanClone\r\n\r\n          console.log(miscellanClone, 'miscellanClone')\r\n\r\n          const payments = []\r\n          data.payments.map(payment => {\r\n            payments.push(Number(payment.amount))\r\n          })\r\n          const initialValue = 0\r\n          const sumWithInitial = payments.reduce(\r\n            (previousValue, currentValue) => previousValue + currentValue,\r\n            initialValue,\r\n          )\r\n\r\n          this.allAmountsPaidIN = sumWithInitial.toFixed(2)\r\n          this.orders = data\r\n          this.project = data\r\n          this.loaded = true\r\n        })\r\n    },\r\n  },\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n[dir] .form-control:focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .custom-select:focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .b-form-spinbutton.form-control:focus, [dir] .b-form-spinbutton.form-control.focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .input-group:not(.bootstrap-touchspin):focus-within .form-control, [dir] .input-group:not(.bootstrap-touchspin):focus-within .input-group-text {\r\n  border-color: #4D6D8A;\r\n}\r\n\r\n.order-cards {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  column-gap: 10px;\r\n  /* border: 2px solid red; */\r\n}\r\n\r\n.order-card {\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\r\n    rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n  padding: 1rem 1rem;\r\n  width: 17%;\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n@import '@core/scss/vue/libs/vue-select.scss';\r\n</style>\r\n"],"sourceRoot":"src/views/projects"}]}