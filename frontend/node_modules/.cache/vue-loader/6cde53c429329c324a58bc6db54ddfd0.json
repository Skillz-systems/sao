{"remainingRequest":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/account/Client.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/account/Client.vue","mtime":1680088796555},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBhdmF0YXJUZXh0IH0gZnJvbSAnQGNvcmUvdXRpbHMvZmlsdGVyJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGF2YXRhclRleHQsDQogICAgICBsb2FkaW5nOiB0cnVlLA0KICAgICAgdXBkYXRpbmc6IGZhbHNlLA0KICAgICAgY2xpZW50OiBudWxsLA0KICAgICAgcHJvZmlsZVBpY3R1cmU6IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2F1dGgvZ2V0UHJvZmlsZVBpY3R1cmUnXSwNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5nZXRDbGllbnRJbmZvKCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGdldENsaWVudEluZm8oKSB7DQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYWNjb3VudC9nZXRDbGllbnRBY2NvdW50JykudGhlbihyZXMgPT4gew0KICAgICAgICBjb25zdCB7IGNsaWVudE9iamVjdCB9ID0gcmVzLmRhdGEuZGF0YQ0KICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudE9iamVjdA0KICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQ0KICAgICAgfSkNCiAgICB9LA0KICAgIHVwZGF0ZVBpY3R1cmUoZSkgew0KICAgICAgdGhpcy51cGRhdGluZyA9IHRydWUNCiAgICAgIGNvbnN0IGZpbGVzID0gZS50YXJnZXQuZmlsZXMgfHwgZS5kYXRhVHJhbnNmZXIuZmlsZXMNCiAgICAgIGlmICghZmlsZXMubGVuZ3RoKSB7DQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgdGhpcy5jcmVhdGVJbWFnZShmaWxlc1swXSkNCiAgICAgIGNvbnN0IGZvcm0gPSB7DQogICAgICAgIHByb2ZpbGVQaWN0dXJlOiBmaWxlc1swXSwNCiAgICAgIH0NCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdhY2NvdW50L3VwZGF0ZVByb2ZpbGVQaWN0dXJlJywgeyBmb3JtIH0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgdGhpcy51cGRhdGluZyA9IGZhbHNlDQogICAgICAgIGNvbnN0IHsgc3VjY2VzcywgdXJsIH0gPSByZXMuZGF0YQ0KICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2F1dGgvU0VUX05FV19QUk9GSUxFX1BJQycsIHsgcHJvZmlsZVBpY3R1cmU6IHVybCB9KQ0KICAgICAgICBjb25zdCB1c2VyRGF0YSA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXInKSkNCiAgICAgICAgdXNlckRhdGEucHJvZmlsZXBpY3R1cmV1cmwgPSB1cmwNCiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3VzZXInLCBKU09OLnN0cmluZ2lmeSh1c2VyRGF0YSkpDQogICAgICAgIHRoaXMudG9hc3QoJ1VwZGF0ZSBQcm9maWxlIFBpY3R1cmUnLCAnQ2hlY2tDaXJjbGVJY29uJywgc3VjY2VzcywgJ3N1Y2Nlc3MnKQ0KICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1nbG9iYWxzDQogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpDQogICAgICB9KQ0KICAgIH0sDQogICAgY3JlYXRlSW1hZ2UoZmlsZSkgew0KICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKQ0KICAgICAgcmVhZGVyLm9ubG9hZCA9IGUgPT4gew0KICAgICAgICB0aGlzLnByb2ZpbGVQaWN0dXJlID0gZS50YXJnZXQucmVzdWx0DQogICAgICB9DQogICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlKQ0KICAgIH0sDQogICAgcmVtb3ZlSW1hZ2UoKSB7DQogICAgICB0aGlzLnByb2ZpbGVQaWN0dXJlID0gbnVsbA0KICAgIH0sDQogIH0sDQp9DQo="},{"version":3,"sources":["Client.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Client.vue","sourceRoot":"src/views/account","sourcesContent":["<template>\r\n  <div>\r\n    <b-col\r\n      v-if=\"loading\"\r\n    >\r\n      <b-spinner\r\n        style=\"width: 3rem; height: 3rem;\"\r\n        variant=\"primary\"\r\n        label=\"Loading...\" type=\"grow\"\r\n        class=\"text-center\"\r\n      />\r\n    </b-col>\r\n    <b-card v-if=\"!loading\">\r\n      <h4 class=\"text-center mt-2\">\r\n        Profile details\r\n      </h4>\r\n      <div class=\"text-center mt-3\">\r\n        <b-link @click=\"$refs.refInputEl2.click()\">\r\n          <b-avatar\r\n            ref=\"profilePicture\"\r\n            :src=\"profilePicture\"\r\n            :text=\"avatarText(client.clientname)\"\r\n            variant=\"light-dark\"\r\n            size=\"130px\"\r\n          />\r\n        </b-link>\r\n        <input\r\n          ref=\"refInputEl2\"\r\n          type=\"file\"\r\n          class=\"d-none\"\r\n          accept=\"image/jpeg, image/png, image/gif, image/jpg\"\r\n          @change=\"updatePicture\"\r\n        >\r\n        <b-card-text\r\n          v-if=\"updating\"\r\n          class=\"mt-1\"\r\n        >\r\n          <b-spinner\r\n            small\r\n            label=\"Small Spinner\"\r\n            type=\"grow\"\r\n            class=\"mb-1 mr-1\"\r\n          />\r\n          Please wait while we upload your profile picture...\r\n        </b-card-text>\r\n      </div>\r\n      <b-row class=\"mt-3\">\r\n        <b-col />\r\n        <b-col lg=\"8\">\r\n          <b-row>\r\n            <b-col lg=\"6\">\r\n              <p>\r\n                <strong class=\"mr-1\">Client Name:</strong> {{ client.clientname }}\r\n              </p>\r\n              <p>\r\n                <strong class=\"mr-1\">Email:</strong> {{ client.email }}\r\n              </p>\r\n              <p>\r\n                <strong class=\"mr-1\">Client Type:</strong> {{ client.clienttype }}\r\n              </p>\r\n              <p>\r\n                <strong class=\"mr-1\">Address:</strong> {{ client.address }}\r\n              </p>\r\n            </b-col>\r\n            <b-col lg=\"6\">\r\n              <p>\r\n                <strong class=\"mr-1\">Phone:</strong> {{ client.phone }}\r\n              </p>\r\n              <p>\r\n                <strong class=\"mr-1\">Location:</strong> {{ client.state }}\r\n              </p>\r\n              <p>\r\n                <strong class=\"mr-1\">House Size:</strong> {{ client.housesize }}\r\n              </p>\r\n            </b-col>\r\n          </b-row>\r\n        </b-col>\r\n        <b-col />\r\n      </b-row>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { avatarText } from '@core/utils/filter'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      avatarText,\r\n      loading: true,\r\n      updating: false,\r\n      client: null,\r\n      profilePicture: this.$store.getters['auth/getProfilePicture'],\r\n    }\r\n  },\r\n  created() {\r\n    this.getClientInfo()\r\n  },\r\n  methods: {\r\n    getClientInfo() {\r\n      this.$store.dispatch('account/getClientAccount').then(res => {\r\n        const { clientObject } = res.data.data\r\n        this.client = clientObject\r\n        this.loading = false\r\n      })\r\n    },\r\n    updatePicture(e) {\r\n      this.updating = true\r\n      const files = e.target.files || e.dataTransfer.files\r\n      if (!files.length) {\r\n        return\r\n      }\r\n      this.createImage(files[0])\r\n      const form = {\r\n        profilePicture: files[0],\r\n      }\r\n      this.$store.dispatch('account/updateProfilePicture', { form }).then(res => {\r\n        this.updating = false\r\n        const { success, url } = res.data\r\n        this.$store.commit('auth/SET_NEW_PROFILE_PIC', { profilePicture: url })\r\n        const userData = JSON.parse(localStorage.getItem('user'))\r\n        userData.profilepictureurl = url\r\n        localStorage.setItem('user', JSON.stringify(userData))\r\n        this.toast('Update Profile Picture', 'CheckCircleIcon', success, 'success')\r\n        // eslint-disable-next-line no-restricted-globals\r\n        location.reload()\r\n      })\r\n    },\r\n    createImage(file) {\r\n      const reader = new FileReader()\r\n      reader.onload = e => {\r\n        this.profilePicture = e.target.result\r\n      }\r\n      reader.readAsDataURL(file)\r\n    },\r\n    removeImage() {\r\n      this.profilePicture = null\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}