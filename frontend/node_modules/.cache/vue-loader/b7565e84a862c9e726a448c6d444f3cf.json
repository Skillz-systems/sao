{"remainingRequest":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/AddProject.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/AddProject.vue","mtime":1685447306943},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5mbGV4IHsNCiAgZGlzcGxheTogZmxleDsNCiAgY29sdW1uLWdhcDogMXJlbTsNCn0NCkBpbXBvcnQgIkBjb3JlL3Njc3MvdnVlL2xpYnMvdnVlLXNlbGVjdC5zY3NzIjsNCg=="},{"version":3,"sources":["AddProject.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAowCA;AACA;AACA;AACA;AACA","file":"AddProject.vue","sourceRoot":"src/views/projects","sourcesContent":["<template>\r\n  <div>\r\n    <b-row>\r\n      <b-col lg=\"12\">\r\n        <b-card no-body>\r\n          <validation-observer ref=\"addProjectValidation\">\r\n            <b-form @submit.prevent>\r\n              <b-card-header class=\"mt-n1\">\r\n                <h4 style=\"color: #4D6D8A; margin-top: 0.5em\">\r\n                  Add Project\r\n                </h4>\r\n              </b-card-header>\r\n              <div style=\"padding: 0 21px 20px 21px;\">\r\n                <h5 class=\"mb-1 bg-light p-1\">\r\n                  Project Details\r\n                </h5>\r\n                <b-row>\r\n                  <b-col cols=\"12\">\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"project name\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"project-name\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Project Name\r\n                        </label>\r\n                        <b-form-input\r\n                          id=\"project-name\"\r\n                          v-model=\"projectName\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col lg=\"3\">\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"installation type\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"installation-type\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Project Selection Mode\r\n                        </label>\r\n                        <v-select\r\n                          id=\"project-type\"\r\n                          v-model=\"selectionMode\"\r\n                          :reduce=\"(option) => option.value\"\r\n                          :options=\"selectionModes\"\r\n                          label=\"title\"\r\n                          @input=\"onLanguageChange\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col lg=\"3\">\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"project type\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"project-type\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Project Type\r\n                        </label>\r\n                        <v-select\r\n                          id=\"project-type\"\r\n                          v-model=\"projectType\"\r\n                          :reduce=\"(option) => option.value\"\r\n                          :options=\"projectTypes\"\r\n                          label=\"title\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col lg=\"3\">\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"installation type\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"installation-type\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Project Installation Type\r\n                        </label>\r\n                        <v-select\r\n                          id=\"project-type\"\r\n                          v-model=\"installationType\"\r\n                          :reduce=\"(option) => option.value\"\r\n                          :options=\"installationTypes\"\r\n                          label=\"title\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col lg=\"3\">\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"status\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"status\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Project Status\r\n                        </label>\r\n                        <v-select\r\n                          id=\"status\"\r\n                          v-model=\"status\"\r\n                          :reduce=\"(option) => option.value\"\r\n                          :options=\"statusOptions\"\r\n                          label=\"title\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n\r\n                  <b-col\r\n                    v-if=\"showSingleSelectionCont == true && selectionMode != 'meshgrid'\"\r\n                    lg=\"3\"\r\n                  >\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"installation type\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"installation-type\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Category\r\n                        </label>\r\n                        <v-select\r\n                          id=\"project-type\"\r\n                          v-model=\"category\"\r\n                          :reduce=\"(option) => option.value\"\r\n                          :options=\"categories\"\r\n                          label=\"title\"\r\n                          @input=\"onCategoryChange\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n\r\n                  <b-col\r\n                    v-if=\"showSingleSelectionCont == true && selectionMode != 'meshgrid'\"\r\n                    lg=\"3\"\r\n                  >\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"installation type\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"installation-type\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Sub Category\r\n                        </label>\r\n                        <v-select\r\n                          id=\"project-type\"\r\n                          v-model=\"subCategory\"\r\n                          :reduce=\"(option) => option.value\"\r\n                          :options=\"subCategories\"\r\n                          label=\"title\"\r\n                          @input=\"onsubCategoryChange\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col\r\n                    v-if=\"showSingleSelectionCont == true && selectionMode != 'meshgrid'\"\r\n                    lg=\"3\"\r\n                  >\r\n                    <b-form-group>\r\n                      <label\r\n                        for=\"num-panels\"\r\n                        class=\"mb-lg-1 font-weight-bolder\"\r\n                      >\r\n                        Discount\r\n                      </label>\r\n                      <vue-numeric-input\r\n                        id=\"discount\"\r\n                        v-model=\"productDiscount\"\r\n                        :min=\"0\"\r\n                        :step=\"1\"\r\n                        width=\"100%\"\r\n                        class=\"number-input\"\r\n                        align=\"center\"\r\n                      />\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col\r\n                    v-if=\"showSingleSelectionCont == true && selectionMode != 'meshgrid'\"\r\n                    lg=\"3\"\r\n                  >\r\n                    <b-form-group>\r\n                      <div>\r\n                        <label\r\n                          for=\"installation-type\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          &nbsp;\r\n                        </label>\r\n                      </div>\r\n\r\n                      <b-button\r\n                        v-if=\"!isLoading\"\r\n                        type=\"submit\"\r\n                        style=\"background-color: #4D6D8A !important; border-color: #4D6D8A !important; border-radius: 40px;\"\r\n                        @click=\"\"\r\n                      >\r\n                        Add Item\r\n                      </b-button>\r\n                    </b-form-group>\r\n                  </b-col>\r\n\r\n                  <b-col\r\n                    v-if=\"showProductSalesCont === true\"\r\n                    lg=\"6\"\r\n                  >\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"lga\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"product\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Product\r\n                        </label>\r\n                        <v-select\r\n                          id=\"product\"\r\n                          v-model=\"product\"\r\n                          :reduce=\"(option) => option.value\"\r\n                          :options=\"products\"\r\n                          label=\"title\"\r\n                          @input=\"getProduct\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col\r\n                    v-if=\"showProductSalesCont === true\"\r\n                    lg=\"6\"\r\n                  >\r\n                    <b-form-group>\r\n                      <label\r\n                        for=\"num-panels\"\r\n                        class=\"mb-lg-1 font-weight-bolder\"\r\n                      >\r\n                        Discount\r\n                      </label>\r\n                      <vue-numeric-input\r\n                        id=\"discount\"\r\n                        v-model=\"productDiscount\"\r\n                        :min=\"0\"\r\n                        :step=\"1\"\r\n                        width=\"100%\"\r\n                        class=\"number-input\"\r\n                        align=\"center\"\r\n                      />\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col\r\n                    cols=\"12\"\r\n                    style=\"color: red\"\r\n                  >\r\n                    {{ misceMessage }}\r\n                  </b-col>\r\n\r\n                  <b-col\r\n                    v-if=\"selectionMode != 'meshgrid'\"\r\n                    cols=\"4\"\r\n                  >\r\n\r\n                    <validation-provider\r\n                      #default=\"{ errors }\"\r\n                      name=\"Miscellaneous\"\r\n                      rules=\"\"\r\n                    >\r\n                      <label\r\n                        for=\"product\"\r\n                        class=\"mb-lg-1 font-weight-bolder\"\r\n                      >\r\n                        Miscellaneous <span\r\n                          v-if=\"allMiscellaneous.length == 0\"\r\n                          style=\"color: red;\"\r\n                          cols=\"4\"\r\n                        >\r\n                          ( You can Add Miscellaneous from the Account Page )\r\n                        </span>\r\n                      </label>\r\n\r\n                      <b-form-select\r\n                        id=\"system-size\"\r\n                        v-model=\"miscellaneous\"\r\n                        :options=\"allMiscellaneous\"\r\n                        @change=\"miscellaneousSelectChange\"\r\n                      />\r\n\r\n                      <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                    </validation-provider>\r\n                  </b-col>\r\n\r\n                  <b-col\r\n                    v-if=\"selectionMode != 'meshgrid'\"\r\n                    cols=\"4\"\r\n                  >\r\n                    <b-form-group>\r\n                      <label\r\n                        for=\"num-panels\"\r\n                        class=\"mb-lg-1 font-weight-bolder\"\r\n                      >\r\n                        Amount\r\n                      </label>\r\n\r\n                      <b-form-input v-model=\"miscellanousAmount\" />\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col\r\n                    v-if=\"selectionMode != 'meshgrid'\"\r\n                    cols=\"4\"\r\n                  >\r\n                    <b-form-group>\r\n                      <div>\r\n                        <label\r\n                          for=\"product\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          &nbsp;\r\n                        </label>\r\n                      </div>\r\n\r\n                      <b-button\r\n                        type=\"submit\"\r\n                        style=\"background-color: #4D6D8A !important; border-color: #4D6D8A !important; border-radius: 40px;\"\r\n                        @click=\"addMiscellaneous\"\r\n                      >\r\n                        ADD Miscellaneous\r\n                      </b-button></b-form-group>\r\n                  </b-col>\r\n                  <b-col cols=\"12\">\r\n                    <!-- <b-table\r\n                      :items=\"createdMiscellaneous\"\r\n                      responsive\r\n                      :fields=\"miscellaneousField\"\r\n                      class=\"mb-0\"\r\n                    >\r\n                      <template #cell(amount)=\"data\">\r\n                        <del style=\"text-decoration-style: double;\">N</del>\r\n                        {{\r\n                          data.item.amount\r\n                            .toString()\r\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                        }}\r\n                      </template>\r\n                      <template #cell(miscellaneous_id)=\"data\">\r\n                        {{\r\n                          data.item.mainmiscallaneous.title\r\n                            .toString()\r\n                            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n                        }}\r\n                      </template>\r\n                    </b-table> -->\r\n                    <div\r\n                      v-if=\"createdMiscellaneous.length != 0\"\r\n                      style=\"border: #ccc solid 1px; padding: 1rem\"\r\n                    >\r\n                      <h6>Miscellaneous Lists:</h6>\r\n                      <div v-for=\"(mif, index) of createdMiscellaneous\">\r\n                        <div\r\n                          class=\"flex\"\r\n                          style=\"padding: 1rem\"\r\n                        >\r\n                          <div>{{ mif.title }}</div>\r\n                          <div>{{ mif.amount }}</div>\r\n                          <div>\r\n                            <feather-icon\r\n                              v-b-tooltip.hover.top=\"'Delete'\"\r\n                              icon=\"Trash2Icon\"\r\n                              size=\"16\"\r\n                              class=\"cursor-pointer mx-1\"\r\n                              @click=\"deleteMiscellaneous(index)\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </b-col>\r\n\r\n                  <b-col cols=\"12\">\r\n                    <b-form-group>\r\n                      <validation-provider\r\n                        #default=\"{ errors }\"\r\n                        name=\"description\"\r\n                        rules=\"required\"\r\n                      >\r\n                        <label\r\n                          for=\"description\"\r\n                          class=\"mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Project Description\r\n                        </label>\r\n                        <b-form-textarea\r\n                          id=\"description\"\r\n                          v-model=\"description\"\r\n                          rows=\"3\"\r\n                        />\r\n                        <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                      </validation-provider>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                </b-row>\r\n\r\n                <div v-if=\"selectionMode != 'meshgrid'\">\r\n                  <h5 class=\"mt-1 mb-1 bg-light p-1\">\r\n                    Client/ Installation Details\r\n                  </h5>\r\n                  <b-row>\r\n                    <b-col lg=\"6\">\r\n                      <b-form-group>\r\n                        <validation-provider\r\n                          #default=\"{ errors }\"\r\n                          name=\"client name\"\r\n                          rules=\"required\"\r\n                        >\r\n                          <label\r\n                            for=\"client-name\"\r\n                            class=\"mb-lg-1 font-weight-bolder\"\r\n                          >\r\n                            Client Name\r\n                          </label>\r\n                          <v-select\r\n                            id=\"client-name\"\r\n                            v-model=\"client\"\r\n                            :reduce=\"(option) => option.value\"\r\n                            :options=\"clients\"\r\n                            label=\"title\"\r\n                            @input=\"getClient\"\r\n                          />\r\n                          <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                        </validation-provider>\r\n                      </b-form-group>\r\n                    </b-col>\r\n                    <b-col lg=\"12\">\r\n                      <b-form-group\r\n                        v-slot=\"{ ariaDescribedby }\"\r\n                        label=\"Multiple Locations?\"\r\n                      >\r\n                        <b-form-radio\r\n                          v-model=\"selected\"\r\n                          :aria-describedby=\"ariaDescribedby\"\r\n                          name=\"some-radios\"\r\n                          value=\"true\"\r\n                        >\r\n                          YES\r\n                        </b-form-radio>\r\n                        <b-form-radio\r\n                          v-model=\"selected\"\r\n                          :aria-describedby=\"ariaDescribedby\"\r\n                          name=\"some-radios\"\r\n                          value=\"false\"\r\n                        >\r\n                          NO\r\n                        </b-form-radio>\r\n                      </b-form-group>\r\n                    </b-col>\r\n\r\n                    <div v-if=\"showAddAnotherLocationBtn === true\">\r\n                      <b-button\r\n                        style=\"background-color: #C4C4C4 !important; border-color: #C4C4C4 !important; border-radius: 40px; margin-right: 1em\"\r\n                        @click=\"showAddressField\"\r\n                      >\r\n                        Add Another Location\r\n                      </b-button>\r\n                    </div>\r\n                    <b-col\r\n                      v-if=\"showLocationInputFields === true\"\r\n                      lg=\"12\"\r\n                    >\r\n                      <b-form-group>\r\n                        <label\r\n                          for=\"state\"\r\n                          class=\"mt-lg-0 mt-1 mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Address\r\n                        </label>\r\n                        <vue-google-autocomplete\r\n                          id=\"map\"\r\n                          ref=\"address\"\r\n                          classname=\"form-control\"\r\n                          placeholder=\"Please type your current address\"\r\n                          country=\"ng\"\r\n                          @placechanged=\"getAddressData\"\r\n                        />\r\n                      </b-form-group>\r\n                    </b-col>\r\n                    <b-col\r\n                      v-if=\"showLocationInputFields === true\"\r\n                      lg=\"12\"\r\n                    >\r\n                      <b-form-group>\r\n                        <label\r\n                          for=\"state\"\r\n                          class=\"mt-lg-0 mt-1 mb-lg-1 font-weight-bolder\"\r\n                        >\r\n                          Full Address with Landmark\r\n                        </label>\r\n                        <b-form-input\r\n                          id=\"project-name\"\r\n                          v-model=\"fullAddress\"\r\n                        />\r\n                      </b-form-group>\r\n                    </b-col>\r\n                    <b-col\r\n                      v-if=\"showLocationInputFields === true\"\r\n                      lg=\"3\"\r\n                    >\r\n                      <b-form-group>\r\n                        <validation-provider\r\n                          #default=\"{ errors }\"\r\n                          name=\"state\"\r\n                          rules=\"required\"\r\n                        >\r\n                          <label\r\n                            for=\"state\"\r\n                            class=\"mt-lg-0 mb-lg-1 font-weight-bolder\"\r\n                          >\r\n                            State\r\n                          </label>\r\n                          <v-select\r\n                            id=\"state\"\r\n                            v-model=\"state\"\r\n                            :reduce=\"(option) => option.value\"\r\n                            :options=\"states\"\r\n                            label=\"title\"\r\n                            @input=\"getLGAsByStateID()\"\r\n                          />\r\n                          <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                        </validation-provider>\r\n                      </b-form-group>\r\n                    </b-col>\r\n                    <b-col\r\n                      v-if=\"showLocationInputFields === true\"\r\n                      lg=\"3\"\r\n                    >\r\n                      <b-form-group>\r\n                        <validation-provider\r\n                          #default=\"{ errors }\"\r\n                          name=\"lga\"\r\n                          rules=\"required\"\r\n                        >\r\n                          <label\r\n                            for=\"lga\"\r\n                            class=\"mb-lg-1 font-weight-bolder\"\r\n                          >\r\n                            LGA\r\n                          </label>\r\n                          <v-select\r\n                            id=\"lga\"\r\n                            v-model=\"lga\"\r\n                            :reduce=\"(option) => option.value\"\r\n                            :options=\"lgas\"\r\n                            label=\"title\"\r\n                          />\r\n                          <small class=\"text-danger\">{{ errors[0] }}</small>\r\n                        </validation-provider>\r\n                      </b-form-group>\r\n                    </b-col>\r\n                  <!-- </b-row> -->\r\n                  </b-row>\r\n                  <b-col lg=\"12\">\r\n                    <div v-if=\"selected === 'true'\">\r\n                      <b-button\r\n                        v-if=\"!isAddingLocation\"\r\n                        type=\"submit\"\r\n                        style=\"background-color: #4D6D8A !important; border-color: #4D6D8A !important; border-radius: 40px;\"\r\n                        @click=\"addLocation\"\r\n                      >\r\n                        ADD LOCATION\r\n                      </b-button>\r\n                      <b-button\r\n                        v-if=\"isAddingLocation\"\r\n                        disabled\r\n                        style=\"background-color: #4D6D8A !important; border-color: #4D6D8A !important; border-radius: 40px;\"\r\n                      >\r\n                        Adding...\r\n                      </b-button>\r\n                      <b style=\"color: red; margin-left: 40px\">{{ message }}</b>\r\n                    </div>\r\n                  </b-col>\r\n                  <b-col>\r\n                    <div\r\n                      v-for=\"location in installationLocationsObject\"\r\n                      :key=\"location.id\"\r\n                    >\r\n                      <b>Location </b> =>\r\n                      {{ location.installationAddress.route }},\r\n                      {{ location.installationAddress.locality }} =>\r\n                      {{ location.installationAddress.country }}\r\n                      <b\r\n                        style=\"color: red; margin-left: 20px; cursor: pointer\"\r\n                        @click=\"removeLocation(location.id)\"\r\n                      >Remove\r\n                      </b>\r\n                    </div>\r\n                  </b-col>\r\n                </div>\r\n                <b-row>\r\n                  <b-col cols=\"12\">\r\n                    <div\r\n                      class=\"d-flex float-lg-right justify-content-center mt-1\"\r\n                    >\r\n                      <b-button\r\n                        style=\"background-color: #C4C4C4 !important; border-color: #C4C4C4 !important; border-radius: 40px; margin-right: 1em\"\r\n                        @click=\"$router.push('/projects')\"\r\n                      >\r\n                        Discard\r\n                      </b-button>\r\n                      <b-button\r\n                        v-if=\"!isLoading\"\r\n                        type=\"submit\"\r\n                        style=\"background-color: #4D6D8A !important; border-color: #4D6D8A !important; border-radius: 40px;\"\r\n                        @click=\"addProject\"\r\n                      >\r\n                        Add Project\r\n                      </b-button>\r\n                      <b-button\r\n                        v-if=\"isLoading\"\r\n                        disabled\r\n                        style=\"background-color: #4D6D8A !important; border-color: #4D6D8A !important; border-radius: 40px;\"\r\n                      >\r\n                        Adding...\r\n                      </b-button>\r\n                    </div>\r\n                  </b-col>\r\n                </b-row>\r\n              </div>\r\n            </b-form>\r\n          </validation-observer>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\r\nimport { required } from '@validations'\r\nimport vSelect from 'vue-select'\r\nimport VueGoogleAutocomplete from 'vue-google-autocomplete'\r\nimport VueNumericInput from 'vue-numeric-input'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  components: {\r\n    ValidationProvider,\r\n    ValidationObserver,\r\n    vSelect,\r\n    VueGoogleAutocomplete,\r\n    VueNumericInput,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      misceMessage: null,\r\n      showAddAnotherLocationBtn: false,\r\n      showLocationInputFields: true,\r\n      id: 0,\r\n      installationLocationsObject: new Map(),\r\n      installationAddress: '',\r\n      installationLocations: [],\r\n      message: '',\r\n      selected: 'false',\r\n      locationCountAboveOne: false,\r\n      isAddingLocation: false,\r\n      isLoading: false,\r\n      client: null,\r\n      product: null,\r\n      projectName: null,\r\n      fullAddress: null,\r\n      projectType: null,\r\n      systemModel: null,\r\n      systemSize: 0,\r\n      installationType: null,\r\n      selectionMode: null,\r\n      category: null,\r\n      subCategory: null,\r\n      price: null,\r\n      numBatteries: 1,\r\n      numPanels: 1,\r\n      status: null,\r\n      location: null,\r\n      state: null,\r\n      lga: null,\r\n      productDiscount: null,\r\n      description: null,\r\n      showSingleSelectionCont: false,\r\n      showProductSalesCont: false,\r\n      accessoryType: [],\r\n      accessory: null,\r\n      categories: [],\r\n      subCategories: [],\r\n      allMiscellaneous: [],\r\n      createdMiscellaneous: [],\r\n      miscellaneous: null,\r\n      miscellanousAmount: null,\r\n      clients: [{ value: null, title: 'select a client' }],\r\n      products: [{ value: null, title: 'select a product', id: null }],\r\n      projectTypes: [{ value: null, title: 'select a project type' }],\r\n      systemModels: [\r\n        { value: null, text: 'Please select a solar system model' },\r\n        { value: 1, text: 'BES-1' },\r\n        { value: 2, text: 'BES-3' },\r\n        { value: 3, text: 'BES-5' },\r\n        { value: 4, text: 'BES-8' },\r\n      ],\r\n      systemSizes: [\r\n        { value: null, text: 'Please select a solar system size' },\r\n        { value: '1 - 2 kW', text: '1 - 2 kW' },\r\n        { value: '3.0 kW', text: '3.0 kW' },\r\n        { value: '4.0 kW', text: '4.0 kW' },\r\n        { value: '5.0 kW', text: '5.0 kW' },\r\n        { value: '5 - 10 kW', text: '5 - 10 kW' },\r\n        { value: '10 + kW', text: '10 + kW' },\r\n      ],\r\n      selectionModes: [\r\n        { value: null, title: 'select product mode' },\r\n        { value: 'product', title: 'Product Sales' },\r\n        { value: 'single', title: 'Single Stock Sales' },\r\n        { value: 'meshgrid', title: 'Mesh Grid' },\r\n      ],\r\n      installationTypes: [\r\n        { value: null, title: 'select an installation type' },\r\n        { value: 'Rooftop', title: 'Rooftop' },\r\n        { value: 'Groundmount', title: 'Groundmount' },\r\n      ],\r\n      statusOptions: [{ value: null, title: 'select a project status' }],\r\n      locations: [{ value: null, text: 'Please select a location' }],\r\n      states: [{ value: null, title: 'Please select a state' }],\r\n      address: [{ value: null, text: 'Please select an address' }],\r\n      lgas: [{ value: null, title: 'Please select an lga' }],\r\n      batteryType: null,\r\n      batteryQuantity: 1,\r\n      batteryTypes: [{ value: null, title: 'Please select a battery type' }],\r\n      inverterType: null,\r\n      inverterQuantity: 1,\r\n      inverterTypes: [{ value: null, title: 'Please select an inverter type' }],\r\n      solarPanelType: null,\r\n      solarPanelQuantity: 1,\r\n      solarPanelTypes: [\r\n        { value: null, title: 'Please select a solar panel type' },\r\n      ],\r\n      miscellaneousField: [\r\n        { key: 'miscellaneous_id', label: 'Name' },\r\n        { key: 'amount', label: 'amount' },\r\n        { key: 'title', label: 'title' },\r\n      ],\r\n\r\n      required,\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    price(newValue) {\r\n      const result = newValue\r\n        .replace(/\\D/g, '')\r\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n      // eslint-disable-next-line no-return-assign\r\n      this.$nextTick(() => (this.price = result))\r\n    },\r\n  },\r\n  mounted() {\r\n    document.getElementById('custom-breadcrumb').innerHTML = 'Projects / <span style=\"color: #C4C4C4\">Add Project</span>'\r\n    this.$refs.address.focus()\r\n    this.getSubItemsMis(6)\r\n    this.getMiscellaneous()\r\n  },\r\n  beforeDestroy() {\r\n    localStorage.removeItem('products')\r\n  },\r\n  created() {\r\n    this.getClients()\r\n    this.getProjectTypes()\r\n    this.getStatusOptions()\r\n    this.getProducts()\r\n    this.getSubItems()\r\n    this.getStates()\r\n    this.getItems()\r\n    this.getSubItemsMis(6)\r\n    this.getMiscellaneous()\r\n  },\r\n  methods: {\r\n    deleteMiscellaneous(index) {\r\n      this.createdMiscellaneous.splice(index, 1)\r\n    },\r\n    addMiscellaneous() {\r\n      console.log(this.allMiscellaneous, 'djdsjsjks')\r\n\r\n      this.misceMessage = ''\r\n      if (!this.miscellaneous || !this.miscellanousAmount) {\r\n        this.misceMessage = 'Select Options'\r\n        return\r\n      }\r\n      const miscellan = this.allMiscellaneous.filter(\r\n        e => e.value == this.miscellaneous,\r\n      )\r\n      this.createdMiscellaneous.push({\r\n        miscellaneous_id: this.miscellaneous,\r\n        amount: this.miscellanousAmount,\r\n        title: miscellan[0].text,\r\n      })\r\n    },\r\n    miscellaneousSelectChange(e, ki) {\r\n      console.log(e, ki, 'sjsdjkdjs')\r\n    },\r\n    getMiscellaneous() {\r\n      const token = localStorage.getItem('token')\r\n      axios.defaults.headers.Authorization = `Bearer ${token}`\r\n\r\n      const formData = new FormData()\r\n      formData.append('title', this.miscellaneous)\r\n\r\n      axios\r\n        .get(`${process.env.VUE_APP_BASE_URL}/mis`)\r\n        .then(response => {\r\n          const { data } = response.data\r\n          const output = []\r\n          data.map(subItem => {\r\n            const allMiscellaneous = { value: subItem.id, text: subItem.title }\r\n            output.push(allMiscellaneous)\r\n          })\r\n          this.allMiscellaneous = output\r\n        })\r\n        .catch(err => {\r\n          alert(err.response.data?.message)\r\n          this.message = err.response.data?.message\r\n          console.log(err)\r\n        })\r\n    },\r\n    removeLocation(id) {\r\n      this.installationLocationsObject = this.installationLocationsObject.filter(\r\n        location => location.id !== id,\r\n      )\r\n    },\r\n    getSubItemsMis(item) {\r\n      const itemID = item\r\n      this.$store\r\n        .dispatch('inventory/getSubItemByID', { itemID })\r\n        .then(res => {\r\n          console.log(res, 'jsjksk')\r\n          const { data } = res.data\r\n\r\n          if (item === 2) {\r\n            data.forEach(subItem => {\r\n              const systemSize = { value: subItem.id, text: subItem.name }\r\n              this.systemSizes.push(systemSize)\r\n            })\r\n          } else if (item === 1) {\r\n            data.forEach(subItem => {\r\n              const inverterType = { value: subItem.id, text: subItem.name }\r\n              this.inverterTypes.push(inverterType)\r\n            })\r\n          } else if (item === 6) {\r\n            data.forEach(subItem => {\r\n              const accessoryType = { value: subItem.id, text: subItem.name }\r\n              this.accessoryType.push(accessoryType)\r\n            })\r\n          } else {\r\n            data.forEach(subItem => {\r\n              const batteryType = { value: subItem.id, text: subItem.name }\r\n              this.batteryTypes.push(batteryType)\r\n            })\r\n          }\r\n        })\r\n    },\r\n    getItems() {\r\n      this.$store.dispatch('inventory/getItems').then(res => {\r\n        this.loaded = true\r\n        const { data } = res.data\r\n        console.log(data, 'sksjkskkjsd')\r\n        // this.categories = data\r\n        data.forEach(item => {\r\n          const itemObj = { value: item.id, title: item.item }\r\n          this.categories.push(itemObj)\r\n        })\r\n      })\r\n    },\r\n    getSubItemsSelected(item) {\r\n      console.log(item, 'dkkklslklks')\r\n      this.subLoaded = false\r\n      this.currentItem = item\r\n      const itemID = item\r\n      this.$store\r\n        .dispatch('inventory/getSubItemByID', { itemID })\r\n        .then(res => {\r\n          this.subLoaded = true\r\n          const { data } = res.data\r\n\r\n          console.log(data, 'resonsellle')\r\n          // this.subItems = data;\r\n          this.subCategories = []\r\n          data.forEach(item => {\r\n            const itemObj = { value: item.id, title: item.name }\r\n            this.subCategories.push(itemObj)\r\n          })\r\n          this.totalRows = data.length\r\n        })\r\n    },\r\n    onLanguageChange(selection) {\r\n      console.log(selection, 'newssang', this.products)\r\n      if (selection == 'product') {\r\n        this.showProductSalesCont = true\r\n        this.showSingleSelectionCont = false\r\n        this.products = this.products.filter(product => product.product_type == 'default')\r\n      } else if (selection == 'single') {\r\n        this.showSingleSelectionCont = true\r\n        this.showProductSalesCont = false\r\n      } else if (selection == 'meshgrid') {\r\n        this.showSingleSelectionCont = false\r\n        this.showProductSalesCont = true\r\n        this.products = this.products.filter(product => product.product_type == 'meshgrid')\r\n      } else {\r\n        this.showSingleSelectionCont = false\r\n        this.showProductSalesCont = false\r\n      }\r\n    },\r\n    onCategoryChange(item) {\r\n      console.log(item, 'sskjdsjsjdkjskkjsj')\r\n      this.getSubItemsSelected(item)\r\n    },\r\n    onsubCategoryChange(item) {\r\n      console.log(item, 'itemmmmm')\r\n    },\r\n\r\n    /**\r\n     * When the location found\r\n     * @param {Object} addressData Data of the found location\r\n     * @param {Object} placeResultData PlaceResult object\r\n     * @param {String} id Input container ID\r\n     */\r\n    getAddressData(addressData, placeResultData, id) {\r\n      console.log('changed')\r\n      const addressLat = {\r\n        lat: addressData.latitude,\r\n        long: addressData.longitude,\r\n        country: addressData.country,\r\n        route: addressData.route,\r\n        locality: addressData.locality,\r\n      }\r\n      this.installationAddress = addressLat\r\n      console.log(addressData, placeResultData, id)\r\n    },\r\n\r\n    addLocation() {\r\n      this.isAddingLocation = true\r\n      this.message = ''\r\n\r\n      if (\r\n        this.state === ''\r\n        || this.lga === ''\r\n        || this.installationAddress === ''\r\n      ) {\r\n        this.message = 'fill all address fields'\r\n      } else {\r\n        const currentLocation = {\r\n          id: this.id + 1,\r\n          log: this.installationAddress.long,\r\n          lat: this.installationAddress.lat,\r\n          installationAddress: this.installationAddress,\r\n          states_id: this.state,\r\n          lgas_id: this.lga,\r\n          address: this.fullAddress,\r\n        }\r\n        this.id += 1\r\n        console.log(currentLocation, 'currentLocation')\r\n        this.installationLocations = this.installationLocations.concat(\r\n          currentLocation,\r\n        )\r\n        this.installationLocationsObject = this.installationLocations\r\n        this.installationAddress = ''\r\n        this.state = ''\r\n        this.lga = ''\r\n      }\r\n\r\n      this.isAddingLocation = false\r\n      this.showLocationInputFields = false\r\n      this.selected = 'false'\r\n      this.showAddAnotherLocationBtn = true\r\n    },\r\n\r\n    showAddressField() {\r\n      this.showLocationInputFields = true\r\n      this.showAddAnotherLocationBtn = false\r\n      this.selected = 'true'\r\n      this.fullAddress = ''\r\n      this.isAddingLocation = false\r\n    },\r\n\r\n    addProject() {\r\n      this.isLoading = true\r\n      let clientAddress\r\n\r\n      console.log(this.installationLocationsObject, 'dsjjs')\r\n      if (Object.keys(this.installationLocationsObject).length !== 0) {\r\n        console.log('yes')\r\n        clientAddress = this.installationLocationsObject\r\n      } else {\r\n        console.log('no')\r\n        clientAddress = [\r\n          {\r\n            log: this.installationAddress.long,\r\n            lat: this.installationAddress.lat,\r\n            states_id: this.state,\r\n            lgas_id: this.lga,\r\n            address: this.fullAddress,\r\n          },\r\n        ]\r\n      }\r\n\r\n      this.$refs.addProjectValidation.validate().then(success => {\r\n        if (success) {\r\n          const form = {\r\n            address: JSON.stringify(clientAddress),\r\n            projectName: this.projectName,\r\n            projectType: this.projectType,\r\n            systemSize: this.systemSize,\r\n            solarPanelQuantity: this.solarPanelQuantity,\r\n            batteryQuantity: this.batteryQuantity,\r\n            description: this.description,\r\n            installationType: this.installationType,\r\n            project_selection_mode: this.selectionMode,\r\n            status: this.status,\r\n            client: this.client,\r\n            lga: this.lga,\r\n            product: this.product,\r\n            price: parseFloat(this?.price?.replace(/,/g, '')),\r\n            inverterQuantity: this.inverterQuantity,\r\n            solarPanelType: this.solarPanelType,\r\n            inverterType: this.inverterType,\r\n            batteryType: this.batteryType,\r\n            discount: this.productDiscount,\r\n            miscellaneous: JSON.stringify(this.createdMiscellaneous),\r\n          }\r\n          this.$store\r\n            .dispatch('project/addProject', { form })\r\n            .then(res => {\r\n              this.isLoading = false\r\n              const { message } = res.data\r\n              this.$router.push('/projects').then(() => {\r\n                this.toast(\r\n                  'Add Project',\r\n                  'CheckCircleIcon',\r\n                  message,\r\n                  'success',\r\n                )\r\n              })\r\n            })\r\n            .catch(err => {\r\n              console.log(err)\r\n              this.isLoading = false\r\n              this.toast(\r\n                'Add Project',\r\n                'SlashIcon',\r\n                err.response.data.message,\r\n                'danger',\r\n              )\r\n            })\r\n        } else {\r\n          this.isLoading = false\r\n          this.toast(\r\n            'Add Project Attempt',\r\n            'AlertTriangleIcon',\r\n            'You must fill in all required fields',\r\n            'warning',\r\n          )\r\n        }\r\n      })\r\n    },\r\n    getClients() {\r\n      this.$store.dispatch('client/getClients').then(res => {\r\n        const { data } = res.data\r\n        data.forEach(client => {\r\n          const clientobj = { value: client.id, title: client.clientname }\r\n          this.clients.push(clientobj)\r\n        })\r\n      })\r\n    },\r\n    getClient() {\r\n      const clientID = this.client\r\n      this.$store.dispatch('client/getClientByID', { clientID }).then(res => {\r\n        const { data } = res.data\r\n        this.state = data.stateid\r\n        const stateID = this.state\r\n        this.lgas = [{ value: null, title: 'Please select an lga' }]\r\n        this.$store\r\n          .dispatch('client/getLGAsByStateID', { stateID })\r\n          .then(innerRes => {\r\n            const innerData = innerRes.data.data\r\n            innerData.forEach(lga => {\r\n              const lgaobj = { value: lga.lgaid, title: lga.lganame }\r\n              this.lgas.push(lgaobj)\r\n              this.lga = data.lgaid\r\n            })\r\n          })\r\n      })\r\n    },\r\n    getProjectTypes() {\r\n      this.$store.dispatch('project/getProjectTypes').then(res => {\r\n        const { data } = res.data\r\n        data.forEach(type => {\r\n          const typeobj = { value: type, title: type }\r\n          this.projectTypes.push(typeobj)\r\n        })\r\n      })\r\n    },\r\n    getStatusOptions() {\r\n      this.$store.dispatch('project/getProjectStatus').then(res => {\r\n        const { data } = res.data\r\n        data.forEach(status => {\r\n          const statusobj = { value: status, title: status }\r\n          this.statusOptions.push(statusobj)\r\n        })\r\n      })\r\n    },\r\n    getProducts() {\r\n      this.$store.dispatch('product/getProducts').then(res => {\r\n        const { data } = res.data\r\n        console.log(data, 'dsjsjjskjs')\r\n        localStorage.setItem('products', JSON.stringify(data))\r\n        data.forEach(product => {\r\n          const productobj = {\r\n            value: product.id,\r\n            title: product.productname,\r\n            id: product.id,\r\n            product_type: product.product_type,\r\n          }\r\n          this.products.push(productobj)\r\n        })\r\n        console.log(this.products, 'sdjksdjks')\r\n      })\r\n    },\r\n    getStates() {\r\n      this.$store.dispatch('client/getStates').then(res => {\r\n        const { data } = res.data\r\n        data.forEach(state => {\r\n          const stateobj = { value: state.stateid, title: state.sname }\r\n          this.states.push(stateobj)\r\n        })\r\n      })\r\n    },\r\n    getLGAsByStateID() {\r\n      const stateID = this.state\r\n      this.lgas = [{ value: null, title: 'Please select an lga' }]\r\n      this.$store\r\n        .dispatch('client/getLGAsByStateID', { stateID })\r\n        .then(res => {\r\n          const { data } = res.data\r\n          data.forEach(lga => {\r\n            const lgaobj = { value: lga.lgaid, title: lga.lganame }\r\n            this.lgas.push(lgaobj)\r\n          })\r\n        })\r\n    },\r\n    getBatteriesAndPanels() {\r\n      const products = JSON.parse(localStorage.getItem('products'))\r\n      products.every(product => {\r\n        if (product.id === this.product) {\r\n          this.numBatteries = product.numberofbatteries\r\n          this.numPanels = product.numberofpanels\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n    },\r\n    getProduct() {\r\n      const products = JSON.parse(localStorage.getItem('products'))\r\n      console.log(products, 'sdjksjsk')\r\n      products.every(product => {\r\n        console.log(product, products, 'dsksdskj')\r\n        if (product.id === this.product) {\r\n          this.price = parseFloat(product.price).toString()\r\n          this.batteryType = product.batteries_type\r\n          this.batteryQuantity = parseFloat(product.numberofbatteries)\r\n          this.inverterType = product.inverter_type\r\n          this.inverterQuantity = parseFloat(product.numberofinverters)\r\n          this.solarPanelType = product.panel_type\r\n          this.solarPanelQuantity = parseFloat(product.numberofpanels)\r\n          return false\r\n        }\r\n        return true\r\n      })\r\n    },\r\n    getSubItems() {\r\n      const itemIDs = [1, 2, 3]\r\n      itemIDs.forEach(itemID => {\r\n        this.$store\r\n          .dispatch('inventory/getSubItemByID', { itemID })\r\n          .then(res => {\r\n            const { data } = res.data\r\n            switch (itemID) {\r\n              case 1: // battery\r\n                data.forEach(subItem => {\r\n                  const batteryType = {\r\n                    value: subItem.id,\r\n                    title: subItem.name,\r\n                  }\r\n                  this.batteryTypes.push(batteryType)\r\n                })\r\n                break\r\n              case 2: // solar panel\r\n                data.forEach(subItem => {\r\n                  const solarPanelType = {\r\n                    value: subItem.id,\r\n                    title: subItem.name,\r\n                  }\r\n                  this.solarPanelTypes.push(solarPanelType)\r\n                })\r\n                break\r\n              default:\r\n                // inverter\r\n                data.forEach(subItem => {\r\n                  const inverterType = {\r\n                    value: subItem.id,\r\n                    title: subItem.name,\r\n                  }\r\n                  this.inverterTypes.push(inverterType)\r\n                })\r\n            }\r\n          })\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style>\r\n[dir] .form-control:focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .custom-select:focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .b-form-spinbutton.form-control:focus,\r\n[dir] .b-form-spinbutton.form-control.focus {\r\n  border-color: #4D6D8A;\r\n}\r\n[dir] .input-group:not(.bootstrap-touchspin):focus-within .form-control,\r\n[dir] .input-group:not(.bootstrap-touchspin):focus-within .input-group-text {\r\n  border-color: #4D6D8A;\r\n}\r\n.number-input {\r\n  height: 38px;\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n.flex {\r\n  display: flex;\r\n  column-gap: 1rem;\r\n}\r\n@import \"@core/scss/vue/libs/vue-select.scss\";\r\n</style>\r\n"]}]}