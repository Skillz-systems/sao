{"remainingRequest":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/@core/layouts/layout-vertical/components/vertical-nav-menu/VerticalNavMenu.vue?vue&type=template&id=6c90bb6e&","dependencies":[{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/@core/layouts/layout-vertical/components/vertical-nav-menu/VerticalNavMenu.vue","mtime":1669925487808},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWFpbi1tZW51IG1lbnUtZml4ZWQgbWVudS1hY2NvcmRpb24gbWVudS1zaGFkb3ciLAogICAgICBjbGFzczogWwogICAgICAgIHsKICAgICAgICAgIGV4cGFuZGVkOgogICAgICAgICAgICAhX3ZtLmlzVmVydGljYWxNZW51Q29sbGFwc2VkIHx8CiAgICAgICAgICAgIChfdm0uaXNWZXJ0aWNhbE1lbnVDb2xsYXBzZWQgJiYgX3ZtLmlzTW91c2VIb3ZlcmVkKQogICAgICAgIH0sCiAgICAgICAgX3ZtLnNraW4gPT09ICJzZW1pLWRhcmsiID8gIm1lbnUtZGFyayIgOiAibWVudS1saWdodCIKICAgICAgXSwKICAgICAgb246IHsKICAgICAgICBtb3VzZWVudGVyOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0udXBkYXRlTW91c2VIb3ZlcmVkKHRydWUpCiAgICAgICAgfSwKICAgICAgICBtb3VzZWxlYXZlOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0udXBkYXRlTW91c2VIb3ZlcmVkKGZhbHNlKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogIm5hdmJhci1oZWFkZXIgZXhwYW5kZWQiIH0sCiAgICAgICAgWwogICAgICAgICAgX3ZtLl90KAogICAgICAgICAgICAiaGVhZGVyIiwKICAgICAgICAgICAgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJuYXYgbmF2YmFyLW5hdiBmbGV4LXJvdyIgfSwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAibGkiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJuYXYtaXRlbSBtci1hdXRvIiB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5pc1ZlcnRpY2FsTWVudUNvbGxhcHNlZCA9PSB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYi1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJuYXZiYXItYnJhbmQiLCBhdHRyczogeyB0bzogIi8iIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNwYW4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnJhbmQtbG9nbyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibWFyZ2luLXRvcCI6ICItMC42cmVtICFpbXBvcnRhbnQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1pbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiBfdm0uYXBwTG9nb0ltYWdlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjUwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjYwMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAibG9nbyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImgyIiwgeyBzdGF0aWNDbGFzczogImJyYW5kLXRleHQiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5hcHBOYW1lKSArICIgIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uaXNWZXJ0aWNhbE1lbnVDb2xsYXBzZWQgPT0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiNTBweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ3RoOiAiNTBweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi10b3AiOiAiMjBweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi1ib3R0b20iOiAiMTVweCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyB3aWR0aDogIjEwMCUiLCBoZWlndGg6ICIxMDAlIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uLy4uLy4uLy4uLy4uL2Fzc2V0cy9pbWFnZXMvbG9nby9mdWxsLWxvZ28ucG5nIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsaSIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm5hdi1pdGVtIG5hdi10b2dnbGUiIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJiLWxpbmsiLAogICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibmF2LWxpbmsgbW9kZXJuLW5hdi10b2dnbGUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiYi1pbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImQtYmxvY2sgZC14bC1ub25lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL2ljb25zL3NpZGViYXItaWNvbi5wbmciKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ6ICJpY29uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0udG9nZ2xlVmVydGljYWxNZW51QWN0aXZlIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZmVhdGhlci1pY29uIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkLW5vbmUgZC14bC1ibG9jayBjb2xsYXBzZS10b2dnbGUtaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uOiAiQXJyb3dMZWZ0SWNvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6ICIzNSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjIwIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAiaWNvbiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLlRvZ2dsZVNpZGVCYXIgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICB0b2dnbGVWZXJ0aWNhbE1lbnVBY3RpdmU6IF92bS50b2dnbGVWZXJ0aWNhbE1lbnVBY3RpdmUsCiAgICAgICAgICAgICAgdG9nZ2xlQ29sbGFwc2VkOiBfdm0udG9nZ2xlQ29sbGFwc2VkLAogICAgICAgICAgICAgIGNvbGxhcHNlVG9nZ2xlckljb246IF92bS5jb2xsYXBzZVRvZ2dsZXJJY29uCiAgICAgICAgICAgIH0KICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDIKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInZ1ZS1wZXJmZWN0LXNjcm9sbGJhciIsCiAgICAgICAgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYWluLW1lbnUtY29udGVudCBzY3JvbGwtYXJlYSBtdC0yIiwKICAgICAgICAgIGF0dHJzOiB7IHNldHRpbmdzOiBfdm0ucGVyZmVjdFNjcm9sbGJhclNldHRpbmdzLCB0YWduYW1lOiAidWwiIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAicHMtc2Nyb2xsLXkiOiBmdW5jdGlvbihldnQpIHsKICAgICAgICAgICAgICBfdm0uc2hhbGxTaGFkb3dCb3R0b20gPSBldnQuc3JjRWxlbWVudC5zY3JvbGxUb3AgPiAwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJ2ZXJ0aWNhbC1uYXYtbWVudS1pdGVtcyIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJuYXZpZ2F0aW9uIG5hdmlnYXRpb24tbWFpbiIsCiAgICAgICAgICAgIGF0dHJzOiB7IGl0ZW1zOiBfdm0ubmF2TWVudUl0ZW1zIH0KICAgICAgICAgIH0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICkKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}