{"remainingRequest":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/AddGrid.vue?vue&type=template&id=551cf5ec&","dependencies":[{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/projects/AddGrid.vue","mtime":1685447306943},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPGItcm93PgogICAgPGItY29sIGxnPSIxMiI+CiAgICAgIDxiLWNhcmQgbm8tYm9keT4KICAgICAgICA8dmFsaWRhdGlvbi1vYnNlcnZlciByZWY9ImFkZFByb2plY3RWYWxpZGF0aW9uIj4KICAgICAgICAgIDxiLWZvcm0gQHN1Ym1pdC5wcmV2ZW50PgogICAgICAgICAgICA8Yi1jYXJkLWhlYWRlciBjbGFzcz0ibXQtbjEiPgogICAgICAgICAgICAgIDxoNCBzdHlsZT0iY29sb3I6ICM0RDZEOEE7IG1hcmdpbi10b3A6IDAuNWVtIj4KICAgICAgICAgICAgICAgIEFkZCBNZXNoIEdyaWQKICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICA8L2ItY2FyZC1oZWFkZXI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmc6IDAgMjFweCAyMHB4IDIxcHg7Ij4KICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1iLTEgYmctbGlnaHQgcC0xIj4KICAgICAgICAgICAgICAgIE1lc2ggR3JpZCBEZXRhaWxzCiAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgICA8Yi1yb3c+CiAgICAgICAgICAgICAgICA8Yi1jb2wgY29scz0iMTIiPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDx2YWxpZGF0aW9uLXByb3ZpZGVyCiAgICAgICAgICAgICAgICAgICAgICAjZGVmYXVsdD0ieyBlcnJvcnMgfSIKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InByb2plY3QgbmFtZSIKICAgICAgICAgICAgICAgICAgICAgIHJ1bGVzPSJyZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgZm9yPSJwcm9qZWN0LW5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYi1sZy0xIGZvbnQtd2VpZ2h0LWJvbGRlciIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgTWVzaCBHcmlkIE5hbWUKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJwcm9qZWN0LW5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9Im1lc2hHcmlkTmFtZSAiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPSJ0ZXh0LWRhbmdlciI+e3sgZXJyb3JzWzBdIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICA8L3ZhbGlkYXRpb24tcHJvdmlkZXI+CiAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICAgIDxiLWNvbCBsZz0iNiI+CiAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgICAgICAgICAgICBmb3I9Im51bS1wYW5lbHMiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgTWF4aW11bSBObyBvZiBDb25uZWN0aW9ucwogICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPHZ1ZS1udW1lcmljLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICBpZD0iZGlzY291bnQiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJjb25uZWN0aW9uQ291bnQiCiAgICAgICAgICAgICAgICAgICAgICA6bWluPSIwIgogICAgICAgICAgICAgICAgICAgICAgOnN0ZXA9IjEiCiAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTAwJSIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJudW1iZXItaW5wdXQiCiAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICAgIDxiLWNvbAoKICAgICAgICAgICAgICAgICAgbGc9IjYiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgPHZhbGlkYXRpb24tcHJvdmlkZXIKICAgICAgICAgICAgICAgICAgICAgICNkZWZhdWx0PSJ7IGVycm9ycyB9IgogICAgICAgICAgICAgICAgICAgICAgbmFtZT0ibGdhIgogICAgICAgICAgICAgICAgICAgICAgcnVsZXM9InJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgICAgICBmb3I9InByb2R1Y3QiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYi1sZy0xIGZvbnQtd2VpZ2h0LWJvbGRlciIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgUHJvZHVjdAogICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICBpZD0icHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icHJvZHVjdCIKICAgICAgICAgICAgICAgICAgICAgICAgOnJlZHVjZT0iKG9wdGlvbikgPT4gb3B0aW9uLnZhbHVlIgogICAgICAgICAgICAgICAgICAgICAgICA6b3B0aW9ucz0icHJvZHVjdHMiCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSJ0aXRsZSIKICAgICAgICAgICAgICAgICAgICAgICAgQGlucHV0PSJnZXRQcm9kdWN0IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC1kYW5nZXIiPnt7IGVycm9yc1swXSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPC92YWxpZGF0aW9uLXByb3ZpZGVyPgogICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8IS0tIDxiLWNvbCBsZz0iMyI+CiAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgPHZhbGlkYXRpb24tcHJvdmlkZXIKICAgICAgICAgICAgICAgICAgICAgICNkZWZhdWx0PSJ7IGVycm9ycyB9IgogICAgICAgICAgICAgICAgICAgICAgbmFtZT0icHJvamVjdCB0eXBlIgogICAgICAgICAgICAgICAgICAgICAgcnVsZXM9InJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgICAgICBmb3I9InByb2plY3QtdHlwZSIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICBQcm9qZWN0IFR5cGUKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgaWQ9InByb2plY3QtdHlwZSIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icHJvamVjdFR5cGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpyZWR1Y2U9IihvcHRpb24pID0+IG9wdGlvbi52YWx1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOm9wdGlvbnM9InByb2plY3RUeXBlcyIKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9InRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC1kYW5nZXIiPnt7IGVycm9yc1swXSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPC92YWxpZGF0aW9uLXByb3ZpZGVyPgogICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDwvYi1jb2w+IC0tPgogICAgICAgICAgICAgICAgPCEtLSA8Yi1jb2wgbGc9IjMiPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDx2YWxpZGF0aW9uLXByb3ZpZGVyCiAgICAgICAgICAgICAgICAgICAgICAjZGVmYXVsdD0ieyBlcnJvcnMgfSIKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9Imluc3RhbGxhdGlvbiB0eXBlIgogICAgICAgICAgICAgICAgICAgICAgcnVsZXM9InJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgICAgICBmb3I9Imluc3RhbGxhdGlvbi10eXBlIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIFByb2plY3QgSW5zdGFsbGF0aW9uIFR5cGUKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgaWQ9InByb2plY3QtdHlwZSIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iaW5zdGFsbGF0aW9uVHlwZSIKICAgICAgICAgICAgICAgICAgICAgICAgOnJlZHVjZT0iKG9wdGlvbikgPT4gb3B0aW9uLnZhbHVlIgogICAgICAgICAgICAgICAgICAgICAgICA6b3B0aW9ucz0iaW5zdGFsbGF0aW9uVHlwZXMiCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSJ0aXRsZSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcnNbMF0gfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvdmFsaWRhdGlvbi1wcm92aWRlcj4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPiAtLT4KICAgICAgICAgICAgICAgIDwhLS0gPGItY29sIGxnPSIzIj4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8dmFsaWRhdGlvbi1wcm92aWRlcgogICAgICAgICAgICAgICAgICAgICAgI2RlZmF1bHQ9InsgZXJyb3JzIH0iCiAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJzdGF0dXMiCiAgICAgICAgICAgICAgICAgICAgICBydWxlcz0icmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ic3RhdHVzIiBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiPgogICAgICAgICAgICAgICAgICAgICAgICBQcm9qZWN0IFN0YXR1cwogICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICBpZD0ic3RhdHVzIgogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzdGF0dXMiCiAgICAgICAgICAgICAgICAgICAgICAgIDpyZWR1Y2U9IihvcHRpb24pID0+IG9wdGlvbi52YWx1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOm9wdGlvbnM9InN0YXR1c09wdGlvbnMiCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSJ0aXRsZSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcnNbMF0gfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvdmFsaWRhdGlvbi1wcm92aWRlcj4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPgogICAgICAgICAgICAgICAgPGItY29sIGxnPSIzIj4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8dmFsaWRhdGlvbi1wcm92aWRlcgogICAgICAgICAgICAgICAgICAgICAgI2RlZmF1bHQ9InsgZXJyb3JzIH0iCiAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJpbnN0YWxsYXRpb24gdHlwZSIKICAgICAgICAgICAgICAgICAgICAgIHJ1bGVzPSJyZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgZm9yPSJpbnN0YWxsYXRpb24tdHlwZSIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICBQcm9qZWN0IFNlbGVjdGlvbiBNb2RlCiAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJwcm9qZWN0LXR5cGUiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGlvbk1vZGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpyZWR1Y2U9IihvcHRpb24pID0+IG9wdGlvbi52YWx1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOm9wdGlvbnM9InNlbGVjdGlvbk1vZGVzIgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0idGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICAgIEBpbnB1dD0ib25MYW5ndWFnZUNoYW5nZSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcnNbMF0gfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvdmFsaWRhdGlvbi1wcm92aWRlcj4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPgoKICAgICAgICAgICAgICAgIDxiLWNvbCB2LWlmPSJzaG93U2luZ2xlU2VsZWN0aW9uQ29udCA9PSB0cnVlIiBsZz0iMyI+CiAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgPHZhbGlkYXRpb24tcHJvdmlkZXIKICAgICAgICAgICAgICAgICAgICAgICNkZWZhdWx0PSJ7IGVycm9ycyB9IgogICAgICAgICAgICAgICAgICAgICAgbmFtZT0iaW5zdGFsbGF0aW9uIHR5cGUiCiAgICAgICAgICAgICAgICAgICAgICBydWxlcz0icmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcj0iaW5zdGFsbGF0aW9uLXR5cGUiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYi1sZy0xIGZvbnQtd2VpZ2h0LWJvbGRlciIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgQ2F0ZWdvcnkKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8di1zZWxlY3QKICAgICAgICAgICAgICAgICAgICAgICAgaWQ9InByb2plY3QtdHlwZSIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iY2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgICAgICAgIDpyZWR1Y2U9IihvcHRpb24pID0+IG9wdGlvbi52YWx1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOm9wdGlvbnM9ImNhdGVnb3JpZXMiCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSJ0aXRsZSIKICAgICAgICAgICAgICAgICAgICAgICAgQGlucHV0PSJvbkNhdGVnb3J5Q2hhbmdlIgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC1kYW5nZXIiPnt7IGVycm9yc1swXSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPC92YWxpZGF0aW9uLXByb3ZpZGVyPgogICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8Yi1jb2wgdi1pZj0ic2hvd1NpbmdsZVNlbGVjdGlvbkNvbnQgPT0gdHJ1ZSIgbGc9IjMiPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDx2YWxpZGF0aW9uLXByb3ZpZGVyCiAgICAgICAgICAgICAgICAgICAgICAjZGVmYXVsdD0ieyBlcnJvcnMgfSIKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9Imluc3RhbGxhdGlvbiB0eXBlIgogICAgICAgICAgICAgICAgICAgICAgcnVsZXM9InJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgICAgICBmb3I9Imluc3RhbGxhdGlvbi10eXBlIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIFN1YiBDYXRlZ29yeQogICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICBpZD0icHJvamVjdC10eXBlIgogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzdWJDYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgICAgICAgOnJlZHVjZT0iKG9wdGlvbikgPT4gb3B0aW9uLnZhbHVlIgogICAgICAgICAgICAgICAgICAgICAgICA6b3B0aW9ucz0ic3ViQ2F0ZWdvcmllcyIKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9InRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgICBAaW5wdXQ9Im9uc3ViQ2F0ZWdvcnlDaGFuZ2UiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPSJ0ZXh0LWRhbmdlciI+e3sgZXJyb3JzWzBdIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICA8L3ZhbGlkYXRpb24tcHJvdmlkZXI+CiAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICAgIDxiLWNvbCB2LWlmPSJzaG93U2luZ2xlU2VsZWN0aW9uQ29udCA9PSB0cnVlIiBsZz0iMyI+CiAgICAgICAgICAgICAgICAgIDxiLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgICAgICAgICAgICBmb3I9Im51bS1wYW5lbHMiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgRGlzY291bnQKICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDx2dWUtbnVtZXJpYy1pbnB1dAogICAgICAgICAgICAgICAgICAgICAgaWQ9ImRpc2NvdW50IgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icHJvZHVjdERpc2NvdW50IgogICAgICAgICAgICAgICAgICAgICAgOm1pbj0iMCIKICAgICAgICAgICAgICAgICAgICAgIDpzdGVwPSIxIgogICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjEwMCUiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibnVtYmVyLWlucHV0IgogICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8Yi1jb2wgdi1pZj0ic2hvd1NpbmdsZVNlbGVjdGlvbkNvbnQgPT0gdHJ1ZSIgbGc9IjMiPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgZm9yPSJpbnN0YWxsYXRpb24tdHlwZSIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAmbmJzcDsKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgIDxiLWJ1dHRvbgogICAgICAgICAgICAgICAgICAgICAgdi1pZj0iIWlzTG9hZGluZyIKICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InN1Ym1pdCIKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjNEQ2RDhBICFpbXBvcnRhbnQ7IGJvcmRlci1jb2xvcjogIzRENkQ4QSAhaW1wb3J0YW50OyBib3JkZXItcmFkaXVzOiA0MHB4OyIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIEFkZCBJdGVtCiAgICAgICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPiAtLT4KCiAgICAgICAgICAgICAgICA8IS0tIDxiLWNvbCBjb2xzPSIxMiIgc3R5bGU9ImNvbG9yOiByZWQiPgogICAgICAgICAgICAgICAgICB7eyBtaXNjZU1lc3NhZ2UgfX0KICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8Yi1jb2wgY29scz0iNCI+CiAgICAgICAgICAgICAgICAgIDx2YWxpZGF0aW9uLXByb3ZpZGVyCiAgICAgICAgICAgICAgICAgICAgI2RlZmF1bHQ9InsgZXJyb3JzIH0iCiAgICAgICAgICAgICAgICAgICAgbmFtZT0iQWNjZXNzb3J5IFR5cGUiCiAgICAgICAgICAgICAgICAgICAgcnVsZXM9InJlcXVpcmVkIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icHJvZHVjdCIgY2xhc3M9Im1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIj4KICAgICAgICAgICAgICAgICAgICAgIE1pc2NlbGxhbmVvdXMKICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgoKICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgaWQ9InN5c3RlbS1zaXplIgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ibWlzY2VsbGFuZW91cyIKICAgICAgICAgICAgICAgICAgICAgIDpvcHRpb25zPSJhbGxNaXNjZWxsYW5lb3VzIgogICAgICAgICAgICAgICAgICAgICAgQGNoYW5nZT0ibWlzY2VsbGFuZW91c1NlbGVjdENoYW5nZSIKICAgICAgICAgICAgICAgICAgICAvPgoKICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcnNbMF0gfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICA8L3ZhbGlkYXRpb24tcHJvdmlkZXI+CiAgICAgICAgICAgICAgICA8L2ItY29sPgoKICAgICAgICAgICAgICAgIDxiLWNvbCBjb2xzPSI0Ij4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgIGZvcj0ibnVtLXBhbmVscyIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYi1sZy0xIGZvbnQtd2VpZ2h0LWJvbGRlciIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICBBbW91bnQKICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgoKICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0IHYtbW9kZWw9Im1pc2NlbGxhbm91c0Ftb3VudCIgLz4KCiAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICAgIDxiLWNvbCBjb2xzPSI0Ij4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0icHJvZHVjdCIgY2xhc3M9Im1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgJm5ic3A7CiAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24KICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InN1Ym1pdCIKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjNEQ2RDhBICFpbXBvcnRhbnQ7IGJvcmRlci1jb2xvcjogIzRENkQ4QSAhaW1wb3J0YW50OyBib3JkZXItcmFkaXVzOiA0MHB4OyIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iYWRkTWlzY2VsbGFuZW91cyIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICBBREQgTWlzY2VsbGFuZW91cwogICAgICAgICAgICAgICAgICAgIDwvYi1idXR0b24+PC9iLWZvcm0tZ3JvdXAKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC9iLWNvbD4gLS0+CiAgICAgICAgICAgICAgICA8Yi1jb2wgY29scz0iMTIiPgogICAgICAgICAgICAgICAgICA8IS0tIDxiLXRhYmxlCiAgICAgICAgICAgICAgICAgICAgOml0ZW1zPSJjcmVhdGVkTWlzY2VsbGFuZW91cyIKICAgICAgICAgICAgICAgICAgICByZXNwb25zaXZlCiAgICAgICAgICAgICAgICAgICAgOmZpZWxkcz0ibWlzY2VsbGFuZW91c0ZpZWxkIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYi0wIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNjZWxsKGFtb3VudCk9ImRhdGEiPgogICAgICAgICAgICAgICAgICAgICAgPGRlbCBzdHlsZT0idGV4dC1kZWNvcmF0aW9uLXN0eWxlOiBkb3VibGU7Ij5OPC9kZWw+CiAgICAgICAgICAgICAgICAgICAgICB7ewogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLml0ZW0uYW1vdW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgLnRvU3RyaW5nKCkKICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXEIoPz0oXGR7M30pKyg/IVxkKSkvZywgIiwiKQogICAgICAgICAgICAgICAgICAgICAgfX0KICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjY2VsbChtaXNjZWxsYW5lb3VzX2lkKT0iZGF0YSI+CiAgICAgICAgICAgICAgICAgICAgICB7ewogICAgICAgICAgICAgICAgICAgICAgICBkYXRhLml0ZW0ubWFpbm1pc2NhbGxhbmVvdXMudGl0bGUKICAgICAgICAgICAgICAgICAgICAgICAgICAudG9TdHJpbmcoKQogICAgICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cQig/PShcZHszfSkrKD8hXGQpKS9nLCAiLCIpCiAgICAgICAgICAgICAgICAgICAgICB9fQogICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgIDwvYi10YWJsZT4gLS0+CiAgICAgICAgICAgICAgICAgIDwhLS0gPGRpdgogICAgICAgICAgICAgICAgICAgIHYtaWY9ImNyZWF0ZWRNaXNjZWxsYW5lb3VzLmxlbmd0aCAhPSAwIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJib3JkZXI6ICNjY2Mgc29saWQgMXB4OyBwYWRkaW5nOiAxcmVtIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPGg2Pk1pc2NlbGxhbmVvdXMgTGlzdHM6PC9oNj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZm9yPSIobWlmLCBpbmRleCkgb2YgY3JlYXRlZE1pc2NlbGxhbmVvdXMiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmxleCIgc3R5bGU9InBhZGRpbmc6IDFyZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7IG1pZi50aXRsZSB9fTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pnt7IG1pZi5hbW91bnQgfX08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZmVhdGhlci1pY29uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWItdG9vbHRpcC5ob3Zlci50b3A9IidEZWxldGUnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj0iVHJhc2gySWNvbiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9IjE2IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImN1cnNvci1wb2ludGVyIG14LTEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImRlbGV0ZU1pc2NlbGxhbmVvdXMoaW5kZXgpIgogICAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PiAtLT4KCiAgICAgICAgICAgICAgICAgIDwhLS0gPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgIGZvcj0ibnVtLXBhbmVscyIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJtYi1sZy0xIGZvbnQtd2VpZ2h0LWJvbGRlciIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICBEaXNjb3VudAogICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPHZ1ZS1udW1lcmljLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICBpZD0iZGlzY291bnQiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwcm9kdWN0RGlzY291bnQiCiAgICAgICAgICAgICAgICAgICAgICA6bWluPSIwIgogICAgICAgICAgICAgICAgICAgICAgOnN0ZXA9IjEiCiAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTAwJSIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJudW1iZXItaW5wdXQiCiAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPiAtLT4KICAgICAgICAgICAgICAgIDwvYi1jb2w+CgogICAgICAgICAgICAgICAgPGItY29sIGNvbHM9IjEyIj4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8dmFsaWRhdGlvbi1wcm92aWRlcgogICAgICAgICAgICAgICAgICAgICAgI2RlZmF1bHQ9InsgZXJyb3JzIH0iCiAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJkZXNjcmlwdGlvbiIKICAgICAgICAgICAgICAgICAgICAgIHJ1bGVzPSJyZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgZm9yPSJkZXNjcmlwdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICBNZXNoIEdyaWQgRGVzY3JpcHRpb24KICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLXRleHRhcmVhCiAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJkZXNjcmlwdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZGVzY3JpcHRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgIHJvd3M9IjMiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPSJ0ZXh0LWRhbmdlciI+e3sgZXJyb3JzWzBdIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICA8L3ZhbGlkYXRpb24tcHJvdmlkZXI+CiAgICAgICAgICAgICAgICAgIDwvYi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICA8L2Itcm93PgoKICAgICAgICAgICAgICA8IS0tIDxoNSBjbGFzcz0ibXQtMSBtYi0xIGJnLWxpZ2h0IHAtMSI+CiAgICAgICAgICAgICAgICBDbGllbnQvIEluc3RhbGxhdGlvbiBEZXRhaWxzCiAgICAgICAgICAgICAgPC9oNT4gLS0+CiAgICAgICAgICAgICAgPGItcm93PgogICAgICAgICAgICAgICAgPCEtLSA8Yi1jb2wgbGc9IjYiPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDx2YWxpZGF0aW9uLXByb3ZpZGVyCiAgICAgICAgICAgICAgICAgICAgICAjZGVmYXVsdD0ieyBlcnJvcnMgfSIKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImNsaWVudCBuYW1lIgogICAgICAgICAgICAgICAgICAgICAgcnVsZXM9InJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgICAgICBmb3I9ImNsaWVudC1uYW1lIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIENsaWVudCBOYW1lCiAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJjbGllbnQtbmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iY2xpZW50IgogICAgICAgICAgICAgICAgICAgICAgICA6cmVkdWNlPSIob3B0aW9uKSA9PiBvcHRpb24udmFsdWUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpvcHRpb25zPSJjbGllbnRzIgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0idGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICAgIEBpbnB1dD0iZ2V0Q2xpZW50IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC1kYW5nZXIiPnt7IGVycm9yc1swXSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPC92YWxpZGF0aW9uLXByb3ZpZGVyPgogICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8Yi1jb2wgbGc9IjEyIj4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cAogICAgICAgICAgICAgICAgICAgIHYtc2xvdD0ieyBhcmlhRGVzY3JpYmVkYnkgfSIKICAgICAgICAgICAgICAgICAgICBsYWJlbD0iTXVsdGlwbGUgTG9jYXRpb25zPyIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDxiLWZvcm0tcmFkaW8KICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGVkIgogICAgICAgICAgICAgICAgICAgICAgOmFyaWEtZGVzY3JpYmVkYnk9ImFyaWFEZXNjcmliZWRieSIKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9InNvbWUtcmFkaW9zIgogICAgICAgICAgICAgICAgICAgICAgdmFsdWU9InRydWUiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgWUVTCiAgICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tcmFkaW8+CiAgICAgICAgICAgICAgICAgICAgPGItZm9ybS1yYWRpbwogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWQiCiAgICAgICAgICAgICAgICAgICAgICA6YXJpYS1kZXNjcmliZWRieT0iYXJpYURlc2NyaWJlZGJ5IgogICAgICAgICAgICAgICAgICAgICAgbmFtZT0ic29tZS1yYWRpb3MiCiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgTk8KICAgICAgICAgICAgICAgICAgICA8L2ItZm9ybS1yYWRpbz4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPiAtLT4KCiAgICAgICAgICAgICAgICA8IS0tIDxkaXYgdi1pZj0ic2hvd0FkZEFub3RoZXJMb2NhdGlvbkJ0biA9PT0gdHJ1ZSI+CiAgICAgICAgICAgICAgICAgIDxiLWJ1dHRvbgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjQzRDNEM0ICFpbXBvcnRhbnQ7IGJvcmRlci1jb2xvcjogI0M0QzRDNCAhaW1wb3J0YW50OyBib3JkZXItcmFkaXVzOiA0MHB4OyBtYXJnaW4tcmlnaHQ6IDFlbSIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9InNob3dBZGRyZXNzRmllbGQiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICBBZGQgQW5vdGhlciBMb2NhdGlvbgogICAgICAgICAgICAgICAgICA8L2ItYnV0dG9uPgogICAgICAgICAgICAgICAgPC9kaXY+IC0tPgoKICAgICAgICAgICAgICAgIDxiLWNvbCBsZz0iMTIiPgogICAgICAgICAgICAgICAgICA8Yi1mb3JtLWdyb3VwPgogICAgICAgICAgICAgICAgICAgIDx2YWxpZGF0aW9uLXByb3ZpZGVyCiAgICAgICAgICAgICAgICAgICAgICAjZGVmYXVsdD0ieyBlcnJvcnMgfSIKICAgICAgICAgICAgICAgICAgICAgIG5hbWU9ImNsaWVudCBuYW1lIgogICAgICAgICAgICAgICAgICAgICAgcnVsZXM9InJlcXVpcmVkIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgICAgICBmb3I9ImNsaWVudC1uYW1lIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIENsaWVudCBOYW1lCiAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJjbGllbnQtbmFtZSIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iY2xpZW50IgogICAgICAgICAgICAgICAgICAgICAgICA6cmVkdWNlPSIob3B0aW9uKSA9PiBvcHRpb24udmFsdWUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpvcHRpb25zPSJjbGllbnRzIgogICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD0idGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICAgIEBpbnB1dD0iZ2V0Q2xpZW50IgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbCBjbGFzcz0idGV4dC1kYW5nZXIiPnt7IGVycm9yc1swXSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPC92YWxpZGF0aW9uLXByb3ZpZGVyPgogICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8Yi1jb2wKICAgICAgICAgICAgICAgICAgdi1pZj0ic2hvd0xvY2F0aW9uSW5wdXRGaWVsZHMgPT09IHRydWUiCiAgICAgICAgICAgICAgICAgIGxnPSIxMiIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgIGZvcj0ic3RhdGUiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibXQtbGctMCBtdC0xIG1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIEFkZHJlc3MKICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDx2dWUtZ29vZ2xlLWF1dG9jb21wbGV0ZQogICAgICAgICAgICAgICAgICAgICAgaWQ9Im1hcCIKICAgICAgICAgICAgICAgICAgICAgIHJlZj0iYWRkcmVzcyIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzbmFtZT0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlBsZWFzZSB0eXBlIHlvdXIgY3VycmVudCBhZGRyZXNzIgogICAgICAgICAgICAgICAgICAgICAgY291bnRyeT0ibmciCiAgICAgICAgICAgICAgICAgICAgICBAcGxhY2VjaGFuZ2VkPSJnZXRBZGRyZXNzRGF0YSIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8L2ItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgICAgICA8Yi1jb2wKICAgICAgICAgICAgICAgICAgdi1pZj0ic2hvd0xvY2F0aW9uSW5wdXRGaWVsZHMgPT09IHRydWUiCiAgICAgICAgICAgICAgICAgIGxnPSIxMiIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgIGZvcj0ic3RhdGUiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibXQtbGctMCBtdC0xIG1iLWxnLTEgZm9udC13ZWlnaHQtYm9sZGVyIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIEZ1bGwgQWRkcmVzcyB3aXRoIExhbmRtYXJrCiAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8Yi1mb3JtLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICBpZD0icHJvamVjdC1uYW1lIgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZnVsbEFkZHJlc3MiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPgogICAgICAgICAgICAgICAgPGItY29sCiAgICAgICAgICAgICAgICAgIHYtaWY9InNob3dMb2NhdGlvbklucHV0RmllbGRzID09PSB0cnVlIgogICAgICAgICAgICAgICAgICBsZz0iMyIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8dmFsaWRhdGlvbi1wcm92aWRlcgogICAgICAgICAgICAgICAgICAgICAgI2RlZmF1bHQ9InsgZXJyb3JzIH0iCiAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJzdGF0ZSIKICAgICAgICAgICAgICAgICAgICAgIHJ1bGVzPSJyZXF1aXJlZCIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwKICAgICAgICAgICAgICAgICAgICAgICAgZm9yPSJzdGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im10LWxnLTAgbWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIFN0YXRlCiAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPHYtc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJzdGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic3RhdGUiCiAgICAgICAgICAgICAgICAgICAgICAgIDpyZWR1Y2U9IihvcHRpb24pID0+IG9wdGlvbi52YWx1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOm9wdGlvbnM9InN0YXRlcyIKICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw9InRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgICBAaW5wdXQ9ImdldExHQXNCeVN0YXRlSUQoKSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcnNbMF0gfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvdmFsaWRhdGlvbi1wcm92aWRlcj4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPgogICAgICAgICAgICAgICAgPGItY29sCiAgICAgICAgICAgICAgICAgIHYtaWY9InNob3dMb2NhdGlvbklucHV0RmllbGRzID09PSB0cnVlIgogICAgICAgICAgICAgICAgICBsZz0iMyIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPGItZm9ybS1ncm91cD4KICAgICAgICAgICAgICAgICAgICA8dmFsaWRhdGlvbi1wcm92aWRlcgogICAgICAgICAgICAgICAgICAgICAgI2RlZmF1bHQ9InsgZXJyb3JzIH0iCiAgICAgICAgICAgICAgICAgICAgICBuYW1lPSJsZ2EiCiAgICAgICAgICAgICAgICAgICAgICBydWxlcz0icmVxdWlyZWQiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgIGZvcj0ibGdhIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibWItbGctMSBmb250LXdlaWdodC1ib2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIExHQQogICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDx2LXNlbGVjdAogICAgICAgICAgICAgICAgICAgICAgICBpZD0ibGdhIgogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJsZ2EiCiAgICAgICAgICAgICAgICAgICAgICAgIDpyZWR1Y2U9IihvcHRpb24pID0+IG9wdGlvbi52YWx1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgOm9wdGlvbnM9ImxnYXMiCiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPSJ0aXRsZSIKICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9InRleHQtZGFuZ2VyIj57eyBlcnJvcnNbMF0gfX08L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvdmFsaWRhdGlvbi1wcm92aWRlcj4KICAgICAgICAgICAgICAgICAgPC9iLWZvcm0tZ3JvdXA+CiAgICAgICAgICAgICAgICA8L2ItY29sPgogICAgICAgICAgICAgICAgPCEtLSA8L2Itcm93PiAtLT4KICAgICAgICAgICAgICA8L2Itcm93PgogICAgICAgICAgICAgIDxiLWNvbCBsZz0iMTIiPgogICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJzZWxlY3RlZCA9PT0gJ3RydWUnIj4KICAgICAgICAgICAgICAgICAgPGItYnV0dG9uCiAgICAgICAgICAgICAgICAgICAgdi1pZj0iIWlzQWRkaW5nTG9jYXRpb24iCiAgICAgICAgICAgICAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjNEQ2RDhBICFpbXBvcnRhbnQ7IGJvcmRlci1jb2xvcjogIzRENkQ4QSAhaW1wb3J0YW50OyBib3JkZXItcmFkaXVzOiA0MHB4OyIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZExvY2F0aW9uIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgQUREIExPQ0FUSU9OCiAgICAgICAgICAgICAgICAgIDwvYi1idXR0b24+CiAgICAgICAgICAgICAgICAgIDxiLWJ1dHRvbgogICAgICAgICAgICAgICAgICAgIHYtaWY9ImlzQWRkaW5nTG9jYXRpb24iCiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzRENkQ4QSAhaW1wb3J0YW50OyBib3JkZXItY29sb3I6ICM0RDZEOEEgIWltcG9ydGFudDsgYm9yZGVyLXJhZGl1czogNDBweDsiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICBBZGRpbmcuLi4KICAgICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgPGIgc3R5bGU9ImNvbG9yOiByZWQ7IG1hcmdpbi1sZWZ0OiA0MHB4Ij57eyBtZXNzYWdlIH19PC9iPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICA8Yi1jb2w+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtZm9yPSJsb2NhdGlvbiBpbiBpbnN0YWxsYXRpb25Mb2NhdGlvbnNPYmplY3QiCiAgICAgICAgICAgICAgICAgIDprZXk9ImxvY2F0aW9uLmlkIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8Yj5Mb2NhdGlvbiA8L2I+ID0+CiAgICAgICAgICAgICAgICAgIHt7IGxvY2F0aW9uLmluc3RhbGxhdGlvbkFkZHJlc3Mucm91dGUgfX0sCiAgICAgICAgICAgICAgICAgIHt7IGxvY2F0aW9uLmluc3RhbGxhdGlvbkFkZHJlc3MubG9jYWxpdHkgfX0gPT4KICAgICAgICAgICAgICAgICAge3sgbG9jYXRpb24uaW5zdGFsbGF0aW9uQWRkcmVzcy5jb3VudHJ5IH19CiAgICAgICAgICAgICAgICAgIDxiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImNvbG9yOiByZWQ7IG1hcmdpbi1sZWZ0OiAyMHB4OyBjdXJzb3I6IHBvaW50ZXIiCiAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJyZW1vdmVMb2NhdGlvbihsb2NhdGlvbi5pZCkiCiAgICAgICAgICAgICAgICAgID5SZW1vdmUKICAgICAgICAgICAgICAgICAgPC9iPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9iLWNvbD4KICAgICAgICAgICAgICA8Yi1yb3c+CiAgICAgICAgICAgICAgICA8Yi1jb2wgY29scz0iMTIiPgogICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImQtZmxleCBmbG9hdC1sZy1yaWdodCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIG10LTEiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24KICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiAjQzRDNEM0ICFpbXBvcnRhbnQ7IGJvcmRlci1jb2xvcjogI0M0QzRDNCAhaW1wb3J0YW50OyBib3JkZXItcmFkaXVzOiA0MHB4OyBtYXJnaW4tcmlnaHQ6IDFlbSIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iJHJvdXRlci5wdXNoKCcvcHJvamVjdHMnKSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICBEaXNjYXJkCiAgICAgICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24KICAgICAgICAgICAgICAgICAgICAgIHYtaWY9IiFpc0xvYWRpbmciCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzRENkQ4QSAhaW1wb3J0YW50OyBib3JkZXItY29sb3I6ICM0RDZEOEEgIWltcG9ydGFudDsgYm9yZGVyLXJhZGl1czogNDBweDsiCiAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZE1lc2hHcmlkUG9kIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIEFkZCBNZXNoCiAgICAgICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8Yi1idXR0b24KICAgICAgICAgICAgICAgICAgICAgIHYtaWY9ImlzTG9hZGluZyIKICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzRENkQ4QSAhaW1wb3J0YW50OyBib3JkZXItY29sb3I6ICM0RDZEOEEgIWltcG9ydGFudDsgYm9yZGVyLXJhZGl1czogNDBweDsiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgQWRkaW5nLi4uCiAgICAgICAgICAgICAgICAgICAgPC9iLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2ItY29sPgogICAgICAgICAgICAgIDwvYi1yb3c+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9iLWZvcm0+CiAgICAgICAgPC92YWxpZGF0aW9uLW9ic2VydmVyPgogICAgICA8L2ItY2FyZD4KICAgIDwvYi1jb2w+CiAgPC9iLXJvdz4KPC9kaXY+Cg=="},null]}