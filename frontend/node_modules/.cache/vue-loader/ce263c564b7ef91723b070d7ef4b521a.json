{"remainingRequest":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/connections/AddConnection.vue?vue&type=template&id=0649a7db&","dependencies":[{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/src/views/connections/AddConnection.vue","mtime":1685447306941},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kingsonly/Documents/tentacular/all_in_one/sao/sao-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}